{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":3136,"databundleVersionId":26502,"sourceType":"competition"}],"dockerImageVersionId":30761,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/vilquer/elt-579-118781-problema-da-semana-1?scriptVersionId=196079086\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-09-09T17:55:46.164672Z","iopub.execute_input":"2024-09-09T17:55:46.165074Z","iopub.status.idle":"2024-09-09T17:55:46.627823Z","shell.execute_reply.started":"2024-09-09T17:55:46.16503Z","shell.execute_reply":"2024-09-09T17:55:46.626544Z"},"trusted":true},"execution_count":1,"outputs":[{"name":"stdout","text":"/kaggle/input/titanic/train.csv\n/kaggle/input/titanic/test.csv\n/kaggle/input/titanic/gender_submission.csv\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# Problema da semana 1  ","metadata":{}},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.preprocessing import StandardScaler\nfrom skopt import gp_minimize\nfrom skopt.space import Real, Integer, Categorical\nfrom skopt.plots import plot_convergence\n","metadata":{"execution":{"iopub.status.busy":"2024-09-09T17:55:46.629368Z","iopub.execute_input":"2024-09-09T17:55:46.629986Z","iopub.status.idle":"2024-09-09T17:55:47.409592Z","shell.execute_reply.started":"2024-09-09T17:55:46.629931Z","shell.execute_reply":"2024-09-09T17:55:47.408228Z"},"trusted":true},"execution_count":2,"outputs":[]},{"cell_type":"markdown","source":"### Controle\nbaseline 76.555%","metadata":{}},{"cell_type":"markdown","source":"## Carga de Dados de treino e teste","metadata":{}},{"cell_type":"code","source":"train = pd.read_csv('/kaggle/input/titanic/train.csv')\ntest = pd.read_csv('/kaggle/input/titanic/test.csv')","metadata":{"execution":{"iopub.status.busy":"2024-09-09T17:55:47.411227Z","iopub.execute_input":"2024-09-09T17:55:47.41175Z","iopub.status.idle":"2024-09-09T17:55:47.442262Z","shell.execute_reply.started":"2024-09-09T17:55:47.411707Z","shell.execute_reply":"2024-09-09T17:55:47.440977Z"},"trusted":true},"execution_count":3,"outputs":[]},{"cell_type":"code","source":"train.head()","metadata":{"execution":{"iopub.status.busy":"2024-09-09T17:55:47.446309Z","iopub.execute_input":"2024-09-09T17:55:47.447157Z","iopub.status.idle":"2024-09-09T17:55:47.47994Z","shell.execute_reply.started":"2024-09-09T17:55:47.447106Z","shell.execute_reply":"2024-09-09T17:55:47.478687Z"},"trusted":true},"execution_count":4,"outputs":[{"execution_count":4,"output_type":"execute_result","data":{"text/plain":"   PassengerId  Survived  Pclass  \\\n0            1         0       3   \n1            2         1       1   \n2            3         1       3   \n3            4         1       1   \n4            5         0       3   \n\n                                                Name     Sex   Age  SibSp  \\\n0                            Braund, Mr. Owen Harris    male  22.0      1   \n1  Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n2                             Heikkinen, Miss. Laina  female  26.0      0   \n3       Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n4                           Allen, Mr. William Henry    male  35.0      0   \n\n   Parch            Ticket     Fare Cabin Embarked  \n0      0         A/5 21171   7.2500   NaN        S  \n1      0          PC 17599  71.2833   C85        C  \n2      0  STON/O2. 3101282   7.9250   NaN        S  \n3      0            113803  53.1000  C123        S  \n4      0            373450   8.0500   NaN        S  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>PassengerId</th>\n      <th>Survived</th>\n      <th>Pclass</th>\n      <th>Name</th>\n      <th>Sex</th>\n      <th>Age</th>\n      <th>SibSp</th>\n      <th>Parch</th>\n      <th>Ticket</th>\n      <th>Fare</th>\n      <th>Cabin</th>\n      <th>Embarked</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>0</td>\n      <td>3</td>\n      <td>Braund, Mr. Owen Harris</td>\n      <td>male</td>\n      <td>22.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>A/5 21171</td>\n      <td>7.2500</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n      <td>female</td>\n      <td>38.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>PC 17599</td>\n      <td>71.2833</td>\n      <td>C85</td>\n      <td>C</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>1</td>\n      <td>3</td>\n      <td>Heikkinen, Miss. Laina</td>\n      <td>female</td>\n      <td>26.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>STON/O2. 3101282</td>\n      <td>7.9250</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n      <td>female</td>\n      <td>35.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>113803</td>\n      <td>53.1000</td>\n      <td>C123</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>0</td>\n      <td>3</td>\n      <td>Allen, Mr. William Henry</td>\n      <td>male</td>\n      <td>35.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>373450</td>\n      <td>8.0500</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"test.head()","metadata":{"execution":{"iopub.status.busy":"2024-09-09T17:55:47.482171Z","iopub.execute_input":"2024-09-09T17:55:47.482533Z","iopub.status.idle":"2024-09-09T17:55:47.50023Z","shell.execute_reply.started":"2024-09-09T17:55:47.482494Z","shell.execute_reply":"2024-09-09T17:55:47.498779Z"},"trusted":true},"execution_count":5,"outputs":[{"execution_count":5,"output_type":"execute_result","data":{"text/plain":"   PassengerId  Pclass                                          Name     Sex  \\\n0          892       3                              Kelly, Mr. James    male   \n1          893       3              Wilkes, Mrs. James (Ellen Needs)  female   \n2          894       2                     Myles, Mr. Thomas Francis    male   \n3          895       3                              Wirz, Mr. Albert    male   \n4          896       3  Hirvonen, Mrs. Alexander (Helga E Lindqvist)  female   \n\n    Age  SibSp  Parch   Ticket     Fare Cabin Embarked  \n0  34.5      0      0   330911   7.8292   NaN        Q  \n1  47.0      1      0   363272   7.0000   NaN        S  \n2  62.0      0      0   240276   9.6875   NaN        Q  \n3  27.0      0      0   315154   8.6625   NaN        S  \n4  22.0      1      1  3101298  12.2875   NaN        S  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>PassengerId</th>\n      <th>Pclass</th>\n      <th>Name</th>\n      <th>Sex</th>\n      <th>Age</th>\n      <th>SibSp</th>\n      <th>Parch</th>\n      <th>Ticket</th>\n      <th>Fare</th>\n      <th>Cabin</th>\n      <th>Embarked</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>892</td>\n      <td>3</td>\n      <td>Kelly, Mr. James</td>\n      <td>male</td>\n      <td>34.5</td>\n      <td>0</td>\n      <td>0</td>\n      <td>330911</td>\n      <td>7.8292</td>\n      <td>NaN</td>\n      <td>Q</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>893</td>\n      <td>3</td>\n      <td>Wilkes, Mrs. James (Ellen Needs)</td>\n      <td>female</td>\n      <td>47.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>363272</td>\n      <td>7.0000</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>894</td>\n      <td>2</td>\n      <td>Myles, Mr. Thomas Francis</td>\n      <td>male</td>\n      <td>62.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>240276</td>\n      <td>9.6875</td>\n      <td>NaN</td>\n      <td>Q</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>895</td>\n      <td>3</td>\n      <td>Wirz, Mr. Albert</td>\n      <td>male</td>\n      <td>27.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>315154</td>\n      <td>8.6625</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>896</td>\n      <td>3</td>\n      <td>Hirvonen, Mrs. Alexander (Helga E Lindqvist)</td>\n      <td>female</td>\n      <td>22.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>3101298</td>\n      <td>12.2875</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"## Descrição estátistica das features núméricas","metadata":{}},{"cell_type":"code","source":"train.describe()","metadata":{"execution":{"iopub.status.busy":"2024-09-09T17:55:47.501791Z","iopub.execute_input":"2024-09-09T17:55:47.502253Z","iopub.status.idle":"2024-09-09T17:55:47.547574Z","shell.execute_reply.started":"2024-09-09T17:55:47.502209Z","shell.execute_reply":"2024-09-09T17:55:47.546242Z"},"trusted":true},"execution_count":6,"outputs":[{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"       PassengerId    Survived      Pclass         Age       SibSp  \\\ncount   891.000000  891.000000  891.000000  714.000000  891.000000   \nmean    446.000000    0.383838    2.308642   29.699118    0.523008   \nstd     257.353842    0.486592    0.836071   14.526497    1.102743   \nmin       1.000000    0.000000    1.000000    0.420000    0.000000   \n25%     223.500000    0.000000    2.000000   20.125000    0.000000   \n50%     446.000000    0.000000    3.000000   28.000000    0.000000   \n75%     668.500000    1.000000    3.000000   38.000000    1.000000   \nmax     891.000000    1.000000    3.000000   80.000000    8.000000   \n\n            Parch        Fare  \ncount  891.000000  891.000000  \nmean     0.381594   32.204208  \nstd      0.806057   49.693429  \nmin      0.000000    0.000000  \n25%      0.000000    7.910400  \n50%      0.000000   14.454200  \n75%      0.000000   31.000000  \nmax      6.000000  512.329200  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>PassengerId</th>\n      <th>Survived</th>\n      <th>Pclass</th>\n      <th>Age</th>\n      <th>SibSp</th>\n      <th>Parch</th>\n      <th>Fare</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>891.000000</td>\n      <td>891.000000</td>\n      <td>891.000000</td>\n      <td>714.000000</td>\n      <td>891.000000</td>\n      <td>891.000000</td>\n      <td>891.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>446.000000</td>\n      <td>0.383838</td>\n      <td>2.308642</td>\n      <td>29.699118</td>\n      <td>0.523008</td>\n      <td>0.381594</td>\n      <td>32.204208</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>257.353842</td>\n      <td>0.486592</td>\n      <td>0.836071</td>\n      <td>14.526497</td>\n      <td>1.102743</td>\n      <td>0.806057</td>\n      <td>49.693429</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>1.000000</td>\n      <td>0.000000</td>\n      <td>1.000000</td>\n      <td>0.420000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>223.500000</td>\n      <td>0.000000</td>\n      <td>2.000000</td>\n      <td>20.125000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>7.910400</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>446.000000</td>\n      <td>0.000000</td>\n      <td>3.000000</td>\n      <td>28.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>14.454200</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>668.500000</td>\n      <td>1.000000</td>\n      <td>3.000000</td>\n      <td>38.000000</td>\n      <td>1.000000</td>\n      <td>0.000000</td>\n      <td>31.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>891.000000</td>\n      <td>1.000000</td>\n      <td>3.000000</td>\n      <td>80.000000</td>\n      <td>8.000000</td>\n      <td>6.000000</td>\n      <td>512.329200</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"train.info()","metadata":{"execution":{"iopub.status.busy":"2024-09-09T17:55:47.549721Z","iopub.execute_input":"2024-09-09T17:55:47.550229Z","iopub.status.idle":"2024-09-09T17:55:47.576134Z","shell.execute_reply.started":"2024-09-09T17:55:47.550172Z","shell.execute_reply":"2024-09-09T17:55:47.574914Z"},"trusted":true},"execution_count":7,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 891 entries, 0 to 890\nData columns (total 12 columns):\n #   Column       Non-Null Count  Dtype  \n---  ------       --------------  -----  \n 0   PassengerId  891 non-null    int64  \n 1   Survived     891 non-null    int64  \n 2   Pclass       891 non-null    int64  \n 3   Name         891 non-null    object \n 4   Sex          891 non-null    object \n 5   Age          714 non-null    float64\n 6   SibSp        891 non-null    int64  \n 7   Parch        891 non-null    int64  \n 8   Ticket       891 non-null    object \n 9   Fare         891 non-null    float64\n 10  Cabin        204 non-null    object \n 11  Embarked     889 non-null    object \ndtypes: float64(2), int64(5), object(5)\nmemory usage: 83.7+ KB\n","output_type":"stream"}]},{"cell_type":"markdown","source":"## Verificar valores nulos ou NAN","metadata":{}},{"cell_type":"code","source":"print(train.isnull().sum())","metadata":{"execution":{"iopub.status.busy":"2024-09-09T17:55:47.577771Z","iopub.execute_input":"2024-09-09T17:55:47.579127Z","iopub.status.idle":"2024-09-09T17:55:47.591148Z","shell.execute_reply.started":"2024-09-09T17:55:47.579067Z","shell.execute_reply":"2024-09-09T17:55:47.589638Z"},"trusted":true},"execution_count":8,"outputs":[{"name":"stdout","text":"PassengerId      0\nSurvived         0\nPclass           0\nName             0\nSex              0\nAge            177\nSibSp            0\nParch            0\nTicket           0\nFare             0\nCabin          687\nEmbarked         2\ndtype: int64\n","output_type":"stream"}]},{"cell_type":"code","source":"print(test.isnull().sum())","metadata":{"execution":{"iopub.status.busy":"2024-09-09T17:55:47.592898Z","iopub.execute_input":"2024-09-09T17:55:47.594443Z","iopub.status.idle":"2024-09-09T17:55:47.61563Z","shell.execute_reply.started":"2024-09-09T17:55:47.594379Z","shell.execute_reply":"2024-09-09T17:55:47.614196Z"},"trusted":true},"execution_count":9,"outputs":[{"name":"stdout","text":"PassengerId      0\nPclass           0\nName             0\nSex              0\nAge             86\nSibSp            0\nParch            0\nTicket           0\nFare             1\nCabin          327\nEmbarked         0\ndtype: int64\n","output_type":"stream"}]},{"cell_type":"markdown","source":"## Mapear as colunas","metadata":{}},{"cell_type":"code","source":"train.columns","metadata":{"execution":{"iopub.status.busy":"2024-09-09T17:55:47.621094Z","iopub.execute_input":"2024-09-09T17:55:47.622342Z","iopub.status.idle":"2024-09-09T17:55:47.631414Z","shell.execute_reply.started":"2024-09-09T17:55:47.622276Z","shell.execute_reply":"2024-09-09T17:55:47.630136Z"},"trusted":true},"execution_count":10,"outputs":[{"execution_count":10,"output_type":"execute_result","data":{"text/plain":"Index(['PassengerId', 'Survived', 'Pclass', 'Name', 'Sex', 'Age', 'SibSp',\n       'Parch', 'Ticket', 'Fare', 'Cabin', 'Embarked'],\n      dtype='object')"},"metadata":{}}]},{"cell_type":"code","source":"X_train = train.drop(['PassengerId', 'Survived'], axis = 1)\n\nX_test = test.drop(['PassengerId'], axis = 1)","metadata":{"execution":{"iopub.status.busy":"2024-09-09T17:55:47.633414Z","iopub.execute_input":"2024-09-09T17:55:47.634717Z","iopub.status.idle":"2024-09-09T17:55:47.648226Z","shell.execute_reply.started":"2024-09-09T17:55:47.634656Z","shell.execute_reply":"2024-09-09T17:55:47.64699Z"},"trusted":true},"execution_count":11,"outputs":[]},{"cell_type":"markdown","source":"## Criar features","metadata":{}},{"cell_type":"code","source":"def criar_features(X):\n    sexo = {'female':1, 'male':0}\n    X['mulher'] = X['Sex'].map(sexo)\n\n    X['Fare'] = X['Fare'].fillna(X['Fare'].mean())\n\n    X['Age'] = X['Age'].fillna(X['Age'].mean())\n#     # Calcular a mediana de 'Age' por grupo de 'Sex' e 'Pclass' e preencher valores ausentes\n#     X['Age'] = X.groupby(['Sex', 'Pclass'])['Age'].transform(lambda x: x.fillna(x.median()))\n# Criar feature 'FamilySize' (Tamanho da Família)\n    X['FamilySize'] = X['SibSp'] + X['Parch'] + 1\n\n    # Preencher valores ausentes de 'Embarked' com 'S' e mapear para numérico\n    X['Embarked'] = X['Embarked'].fillna('S')\n    portos = {'S': 1, 'C': 2, 'Q': 3}\n    X['porto'] = X['Embarked'].map(portos)\n\n    # Criar feature 'crianca' para indicar se a idade é menor que 12\n    X['crianca'] = np.where(X['Age'] < 12, 1, 0)\n\n    # Criar feature 'IsAlone' (Está Sozinho)\n    X['IsAlone'] = np.where(X['FamilySize'] == 1, 1, 0)\n\n    # Extrair títulos dos nomes e mapear para numérico\n    X['Title'] = X['Name'].str.extract(' ([A-Za-z]+)\\.', expand=False)\n    titulos = {\n        'Mr': 1, \n        'Miss': 2, 'Ms': 2, 'Mlle': 2,\n        'Mrs': 3, 'Mme': 3,\n        'Master': 4,\n        'Rare': 5      \n    }\n    X['Title'] = X['Title'].map(titulos)\n    X['Title'] = X['Title'].fillna(0)\n    \n    # Criar feature 'cabinknow' (Conhece a Cabine)\n    X['cabinknow'] = np.where(X['Cabin'].isnull(), 0, 1)\n\n    # Criar feature 'FarePerPerson' (Tarifa por Pessoa)\n    X['FarePerPerson'] = X['Fare'] / X['FamilySize']\n\n    return X\n\n# Aplicar a função nos conjuntos de treino e teste\nX_train = criar_features(X_train)\nX_test = criar_features(X_test)","metadata":{"execution":{"iopub.status.busy":"2024-09-09T17:55:47.650422Z","iopub.execute_input":"2024-09-09T17:55:47.651027Z","iopub.status.idle":"2024-09-09T17:55:47.693693Z","shell.execute_reply.started":"2024-09-09T17:55:47.65097Z","shell.execute_reply":"2024-09-09T17:55:47.692359Z"},"trusted":true},"execution_count":12,"outputs":[]},{"cell_type":"markdown","source":"## Selecionar as features","metadata":{}},{"cell_type":"code","source":"features = ['Pclass', \n            'Age', \n#             'SibSp',\n#             'Parch', \n            'Fare', \n            'mulher', \n            'porto', \n            'crianca',\n            'FamilySize',\n            'IsAlone', \n            'Title',\n            'cabinknow', \n            'FarePerPerson'\n           ]\n\nX_train = X_train[features]\nX_test = X_test[features]\n\ny_train = train['Survived']","metadata":{"execution":{"iopub.status.busy":"2024-09-09T17:55:47.701696Z","iopub.execute_input":"2024-09-09T17:55:47.702876Z","iopub.status.idle":"2024-09-09T17:55:47.713282Z","shell.execute_reply.started":"2024-09-09T17:55:47.702804Z","shell.execute_reply":"2024-09-09T17:55:47.712103Z"},"trusted":true},"execution_count":13,"outputs":[]},{"cell_type":"markdown","source":"## Visualização","metadata":{}},{"cell_type":"code","source":"import matplotlib.pyplot as plt\n\nfor i in X_train.columns:\n    plt.hist(X_train[i])\n    plt.title(i)\n    plt.show()","metadata":{"execution":{"iopub.status.busy":"2024-09-09T17:55:47.715796Z","iopub.execute_input":"2024-09-09T17:55:47.716276Z","iopub.status.idle":"2024-09-09T17:55:50.245726Z","shell.execute_reply.started":"2024-09-09T17:55:47.716231Z","shell.execute_reply":"2024-09-09T17:55:50.244358Z"},"trusted":true},"execution_count":14,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"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"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"## Groupy","metadata":{}},{"cell_type":"code","source":"train.groupby(['Survived']).count()","metadata":{"execution":{"iopub.status.busy":"2024-09-09T17:55:50.247613Z","iopub.execute_input":"2024-09-09T17:55:50.248143Z","iopub.status.idle":"2024-09-09T17:55:50.273526Z","shell.execute_reply.started":"2024-09-09T17:55:50.248087Z","shell.execute_reply":"2024-09-09T17:55:50.272291Z"},"trusted":true},"execution_count":15,"outputs":[{"execution_count":15,"output_type":"execute_result","data":{"text/plain":"          PassengerId  Pclass  Name  Sex  Age  SibSp  Parch  Ticket  Fare  \\\nSurvived                                                                    \n0                 549     549   549  549  424    549    549     549   549   \n1                 342     342   342  342  290    342    342     342   342   \n\n          Cabin  Embarked  \nSurvived                   \n0            68       549  \n1           136       340  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>PassengerId</th>\n      <th>Pclass</th>\n      <th>Name</th>\n      <th>Sex</th>\n      <th>Age</th>\n      <th>SibSp</th>\n      <th>Parch</th>\n      <th>Ticket</th>\n      <th>Fare</th>\n      <th>Cabin</th>\n      <th>Embarked</th>\n    </tr>\n    <tr>\n      <th>Survived</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>549</td>\n      <td>549</td>\n      <td>549</td>\n      <td>549</td>\n      <td>424</td>\n      <td>549</td>\n      <td>549</td>\n      <td>549</td>\n      <td>549</td>\n      <td>68</td>\n      <td>549</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>342</td>\n      <td>342</td>\n      <td>342</td>\n      <td>342</td>\n      <td>290</td>\n      <td>342</td>\n      <td>342</td>\n      <td>342</td>\n      <td>342</td>\n      <td>136</td>\n      <td>340</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"## pivot_table","metadata":{}},{"cell_type":"code","source":"pd.pivot_table(train, index = ['Survived'], columns = ['Pclass'], values = 'PassengerId', aggfunc = 'count')","metadata":{"execution":{"iopub.status.busy":"2024-09-09T17:55:50.274791Z","iopub.execute_input":"2024-09-09T17:55:50.27522Z","iopub.status.idle":"2024-09-09T17:55:50.300085Z","shell.execute_reply.started":"2024-09-09T17:55:50.275177Z","shell.execute_reply":"2024-09-09T17:55:50.298839Z"},"trusted":true},"execution_count":16,"outputs":[{"execution_count":16,"output_type":"execute_result","data":{"text/plain":"Pclass      1   2    3\nSurvived              \n0          80  97  372\n1         136  87  119","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>Pclass</th>\n      <th>1</th>\n      <th>2</th>\n      <th>3</th>\n    </tr>\n    <tr>\n      <th>Survived</th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>80</td>\n      <td>97</td>\n      <td>372</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>136</td>\n      <td>87</td>\n      <td>119</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"## Padronização das features","metadata":{}},{"cell_type":"code","source":"scaler = StandardScaler() #media 0 e desvio padrão 1\n\nX_train_sc = scaler.fit_transform(X_train)\n\nX_test_sc = scaler.transform(X_test)\n","metadata":{"execution":{"iopub.status.busy":"2024-09-09T17:55:50.3017Z","iopub.execute_input":"2024-09-09T17:55:50.302131Z","iopub.status.idle":"2024-09-09T17:55:50.316177Z","shell.execute_reply.started":"2024-09-09T17:55:50.302087Z","shell.execute_reply":"2024-09-09T17:55:50.314632Z"},"trusted":true},"execution_count":17,"outputs":[]},{"cell_type":"markdown","source":"## Modelo de validação cruzada","metadata":{}},{"cell_type":"markdown","source":"### Logistic Regression","metadata":{}},{"cell_type":"code","source":"model_lr = LogisticRegression(random_state=0, \n                              n_jobs = -1 )\nscore =  cross_val_score(model_lr,X_train_sc, y_train, cv = 10, n_jobs = -1)\n\nnp.mean(score)","metadata":{"execution":{"iopub.status.busy":"2024-09-09T17:55:50.317878Z","iopub.execute_input":"2024-09-09T17:55:50.318838Z","iopub.status.idle":"2024-09-09T17:55:53.11642Z","shell.execute_reply.started":"2024-09-09T17:55:50.318786Z","shell.execute_reply":"2024-09-09T17:55:53.115008Z"},"trusted":true},"execution_count":18,"outputs":[{"execution_count":18,"output_type":"execute_result","data":{"text/plain":"0.8058302122347065"},"metadata":{}}]},{"cell_type":"code","source":"def treinar_modelo_lr(parametros):\n    model_lr = LogisticRegression(C=parametros[0], \n                                  solver=parametros[1], \n                                  max_iter=parametros[2], \n                                  random_state=0)\n    score = cross_val_score(model_lr, X_train_sc, y_train, cv=10)\n    mean_score = np.mean(score)\n    return -mean_score\n\nparametros_lr = [(1e-4, 10),                  # C\n                 ('liblinear', 'lbfgs'),       # solver\n                 (50, 300)]                    # max_iter\n\notimos_lr = gp_minimize(treinar_modelo_lr, parametros_lr, random_state=0, verbose=1, n_calls=50, n_random_starts=10)\nprint(otimos_lr.fun, otimos_lr.x)\nplot_convergence(otimos_lr)\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-09-09T17:55:53.118637Z","iopub.execute_input":"2024-09-09T17:55:53.119163Z","iopub.status.idle":"2024-09-09T17:56:23.921461Z","shell.execute_reply.started":"2024-09-09T17:55:53.119106Z","shell.execute_reply":"2024-09-09T17:56:23.920108Z"},"trusted":true},"execution_count":19,"outputs":[{"name":"stdout","text":"Iteration No: 1 started. Evaluating function at random point.\nIteration No: 1 ended. Evaluation done at random point.\nTime taken: 0.0759\nFunction value obtained: -0.8047\nCurrent minimum: -0.8047\nIteration No: 2 started. Evaluating function at random point.\nIteration No: 2 ended. Evaluation done at random point.\nTime taken: 0.0719\nFunction value obtained: -0.8047\nCurrent minimum: -0.8047\nIteration No: 3 started. Evaluating function at random point.\nIteration No: 3 ended. Evaluation done at random point.\nTime taken: 0.0569\nFunction value obtained: -0.8047\nCurrent minimum: -0.8047\nIteration No: 4 started. Evaluating function at random point.\nIteration No: 4 ended. Evaluation done at random point.\nTime taken: 0.0760\nFunction value obtained: -0.8047\nCurrent minimum: -0.8047\nIteration No: 5 started. Evaluating function at random point.\nIteration No: 5 ended. Evaluation done at random point.\nTime taken: 0.0746\nFunction value obtained: -0.8047\nCurrent minimum: -0.8047\nIteration No: 6 started. Evaluating function at random point.\nIteration No: 6 ended. Evaluation done at random point.\nTime taken: 0.0566\nFunction value obtained: -0.8047\nCurrent minimum: -0.8047\nIteration No: 7 started. Evaluating function at random point.\nIteration No: 7 ended. Evaluation done at random point.\nTime taken: 0.0735\nFunction value obtained: -0.8047\nCurrent minimum: -0.8047\nIteration No: 8 started. Evaluating function at random point.\nIteration No: 8 ended. Evaluation done at random point.\nTime taken: 0.0727\nFunction value obtained: -0.8047\nCurrent minimum: -0.8047\nIteration No: 9 started. Evaluating function at random point.\nIteration No: 9 ended. Evaluation done at random point.\nTime taken: 0.0726\nFunction value obtained: -0.8047\nCurrent minimum: -0.8047\nIteration No: 10 started. Evaluating function at random point.\nIteration No: 10 ended. Evaluation done at random point.\nTime taken: 0.3394\nFunction value obtained: -0.8047\nCurrent minimum: -0.8047\nIteration No: 11 started. Searching for the next optimal point.\nIteration No: 11 ended. Search finished for the next optimal point.\nTime taken: 0.3693\nFunction value obtained: -0.7800\nCurrent minimum: -0.8047\nIteration No: 12 started. Searching for the next optimal point.\nIteration No: 12 ended. Search finished for the next optimal point.\nTime taken: 0.6756\nFunction value obtained: -0.8036\nCurrent minimum: -0.8047\nIteration No: 13 started. Searching for the next optimal point.\nIteration No: 13 ended. Search finished for the next optimal point.\nTime taken: 0.4734\nFunction value obtained: -0.7800\nCurrent minimum: -0.8047\nIteration No: 14 started. Searching for the next optimal point.\nIteration No: 14 ended. Search finished for the next optimal point.\nTime taken: 0.4517\nFunction value obtained: -0.8047\nCurrent minimum: -0.8047\nIteration No: 15 started. Searching for the next optimal point.\nIteration No: 15 ended. Search finished for the next optimal point.\nTime taken: 0.5617\nFunction value obtained: -0.8047\nCurrent minimum: -0.8047\nIteration No: 16 started. Searching for the next optimal point.\nIteration No: 16 ended. Search finished for the next optimal point.\nTime taken: 0.4558\nFunction value obtained: -0.8047\nCurrent minimum: -0.8047\nIteration No: 17 started. Searching for the next optimal point.\nIteration No: 17 ended. Search finished for the next optimal point.\nTime taken: 0.5060\nFunction value obtained: -0.8047\nCurrent minimum: -0.8047\nIteration No: 18 started. Searching for the next optimal point.\nIteration No: 18 ended. Search finished for the next optimal point.\nTime taken: 0.5067\nFunction value obtained: -0.8047\nCurrent minimum: -0.8047\nIteration No: 19 started. Searching for the next optimal point.\nIteration No: 19 ended. Search finished for the next optimal point.\nTime taken: 0.5502\nFunction value obtained: -0.8047\nCurrent minimum: -0.8047\nIteration No: 20 started. Searching for the next optimal point.\nIteration No: 20 ended. Search finished for the next optimal point.\nTime taken: 0.5741\nFunction value obtained: -0.8047\nCurrent minimum: -0.8047\nIteration No: 21 started. Searching for the next optimal point.\nIteration No: 21 ended. Search finished for the next optimal point.\nTime taken: 0.6096\nFunction value obtained: -0.8047\nCurrent minimum: -0.8047\nIteration No: 22 started. Searching for the next optimal point.\nIteration No: 22 ended. Search finished for the next optimal point.\nTime taken: 0.7170\nFunction value obtained: -0.8047\nCurrent minimum: -0.8047\nIteration No: 23 started. Searching for the next optimal point.\nIteration No: 23 ended. Search finished for the next optimal point.\nTime taken: 0.7744\nFunction value obtained: -0.7655\nCurrent minimum: -0.8047\nIteration No: 24 started. Searching for the next optimal point.\nIteration No: 24 ended. Search finished for the next optimal point.\nTime taken: 0.6917\nFunction value obtained: -0.8047\nCurrent minimum: -0.8047\nIteration No: 25 started. Searching for the next optimal point.\nIteration No: 25 ended. Search finished for the next optimal point.\nTime taken: 0.6323\nFunction value obtained: -0.8047\nCurrent minimum: -0.8047\nIteration No: 26 started. Searching for the next optimal point.\nIteration No: 26 ended. Search finished for the next optimal point.\nTime taken: 0.5584\nFunction value obtained: -0.8047\nCurrent minimum: -0.8047\nIteration No: 27 started. Searching for the next optimal point.\nIteration No: 27 ended. Search finished for the next optimal point.\nTime taken: 0.5899\nFunction value obtained: -0.8047\nCurrent minimum: -0.8047\nIteration No: 28 started. Searching for the next optimal point.\nIteration No: 28 ended. Search finished for the next optimal point.\nTime taken: 0.7366\nFunction value obtained: -0.8047\nCurrent minimum: -0.8047\nIteration No: 29 started. Searching for the next optimal point.\nIteration No: 29 ended. Search finished for the next optimal point.\nTime taken: 0.6706\nFunction value obtained: -0.8047\nCurrent minimum: -0.8047\nIteration No: 30 started. Searching for the next optimal point.\nIteration No: 30 ended. Search finished for the next optimal point.\nTime taken: 0.5918\nFunction value obtained: -0.8047\nCurrent minimum: -0.8047\nIteration No: 31 started. Searching for the next optimal point.\nIteration No: 31 ended. Search finished for the next optimal point.\nTime taken: 0.6061\nFunction value obtained: -0.8047\nCurrent minimum: -0.8047\nIteration No: 32 started. Searching for the next optimal point.\nIteration No: 32 ended. Search finished for the next optimal point.\nTime taken: 0.7189\nFunction value obtained: -0.8047\nCurrent minimum: -0.8047\nIteration No: 33 started. Searching for the next optimal point.\nIteration No: 33 ended. Search finished for the next optimal point.\nTime taken: 0.8256\nFunction value obtained: -0.8047\nCurrent minimum: -0.8047\nIteration No: 34 started. Searching for the next optimal point.\nIteration No: 34 ended. Search finished for the next optimal point.\nTime taken: 0.7831\nFunction value obtained: -0.8047\nCurrent minimum: -0.8047\nIteration No: 35 started. Searching for the next optimal point.\nIteration No: 35 ended. Search finished for the next optimal point.\nTime taken: 0.7783\nFunction value obtained: -0.8047\nCurrent minimum: -0.8047\nIteration No: 36 started. Searching for the next optimal point.\nIteration No: 36 ended. Search finished for the next optimal point.\nTime taken: 0.8526\nFunction value obtained: -0.8047\nCurrent minimum: -0.8047\nIteration No: 37 started. Searching for the next optimal point.\nIteration No: 37 ended. Search finished for the next optimal point.\nTime taken: 0.7830\nFunction value obtained: -0.8047\nCurrent minimum: -0.8047\nIteration No: 38 started. Searching for the next optimal point.\nIteration No: 38 ended. Search finished for the next optimal point.\nTime taken: 0.8021\nFunction value obtained: -0.8058\nCurrent minimum: -0.8058\nIteration No: 39 started. Searching for the next optimal point.\nIteration No: 39 ended. Search finished for the next optimal point.\nTime taken: 0.8441\nFunction value obtained: -0.8058\nCurrent minimum: -0.8058\nIteration No: 40 started. Searching for the next optimal point.\nIteration No: 40 ended. Search finished for the next optimal point.\nTime taken: 0.8099\nFunction value obtained: -0.8047\nCurrent minimum: -0.8058\nIteration No: 41 started. Searching for the next optimal point.\nIteration No: 41 ended. Search finished for the next optimal point.\nTime taken: 0.8852\nFunction value obtained: -0.8047\nCurrent minimum: -0.8058\nIteration No: 42 started. Searching for the next optimal point.\nIteration No: 42 ended. Search finished for the next optimal point.\nTime taken: 0.8574\nFunction value obtained: -0.8047\nCurrent minimum: -0.8058\nIteration No: 43 started. Searching for the next optimal point.\nIteration No: 43 ended. Search finished for the next optimal point.\nTime taken: 0.9425\nFunction value obtained: -0.8047\nCurrent minimum: -0.8058\nIteration No: 44 started. Searching for the next optimal point.\nIteration No: 44 ended. Search finished for the next optimal point.\nTime taken: 1.0230\nFunction value obtained: -0.8047\nCurrent minimum: -0.8058\nIteration No: 45 started. Searching for the next optimal point.\nIteration No: 45 ended. Search finished for the next optimal point.\nTime taken: 0.9879\nFunction value obtained: -0.8047\nCurrent minimum: -0.8058\nIteration No: 46 started. Searching for the next optimal point.\nIteration No: 46 ended. Search finished for the next optimal point.\nTime taken: 1.1567\nFunction value obtained: -0.8047\nCurrent minimum: -0.8058\nIteration No: 47 started. Searching for the next optimal point.\nIteration No: 47 ended. Search finished for the next optimal point.\nTime taken: 0.9482\nFunction value obtained: -0.8047\nCurrent minimum: -0.8058\nIteration No: 48 started. Searching for the next optimal point.\nIteration No: 48 ended. Search finished for the next optimal point.\nTime taken: 0.9664\nFunction value obtained: -0.8047\nCurrent minimum: -0.8058\nIteration No: 49 started. Searching for the next optimal point.\nIteration No: 49 ended. Search finished for the next optimal point.\nTime taken: 1.1800\nFunction value obtained: -0.8047\nCurrent minimum: -0.8058\nIteration No: 50 started. Searching for the next optimal point.\nIteration No: 50 ended. Search finished for the next optimal point.\nTime taken: 0.9559\nFunction value obtained: -0.8047\nCurrent minimum: -0.8058\n-0.8058426966292135 [0.6761084142638111, 'liblinear', 75]\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"model_lr = LogisticRegression(C=otimos_lr.x[0], \n                              solver=otimos_lr.x[1], \n                              max_iter=otimos_lr.x[2], \n                              random_state=0)\nscore = cross_val_score(model_lr, X_train_sc, y_train, cv=10)\nnp.mean(score)","metadata":{"execution":{"iopub.status.busy":"2024-09-09T17:56:23.923164Z","iopub.execute_input":"2024-09-09T17:56:23.923668Z","iopub.status.idle":"2024-09-09T17:56:23.996847Z","shell.execute_reply.started":"2024-09-09T17:56:23.923608Z","shell.execute_reply":"2024-09-09T17:56:23.995514Z"},"trusted":true},"execution_count":20,"outputs":[{"execution_count":20,"output_type":"execute_result","data":{"text/plain":"0.8058426966292135"},"metadata":{}}]},{"cell_type":"markdown","source":"### Naive Bayes para Classificação","metadata":{}},{"cell_type":"code","source":"from sklearn.naive_bayes import GaussianNB\n\nmodel_nb = GaussianNB()\n\nscore = cross_val_score(model_nb, X_train_sc, y_train, cv = 10)\n\nnp.mean(score)","metadata":{"execution":{"iopub.status.busy":"2024-09-09T17:56:23.998213Z","iopub.execute_input":"2024-09-09T17:56:23.998582Z","iopub.status.idle":"2024-09-09T17:56:24.044371Z","shell.execute_reply.started":"2024-09-09T17:56:23.998542Z","shell.execute_reply":"2024-09-09T17:56:24.043203Z"},"trusted":true},"execution_count":21,"outputs":[{"execution_count":21,"output_type":"execute_result","data":{"text/plain":"0.8036079900124845"},"metadata":{}}]},{"cell_type":"code","source":"def treinar_modelo_gnb(parametros):\n    model_gnb = GaussianNB(var_smoothing=parametros[0])\n    score = cross_val_score(model_gnb, X_train_sc, y_train, cv=10)\n    mean_score = np.mean(score)\n    return -mean_score\n\nparametros_gnb = [(1e-9, 1e-1)]  # var_smoothing\n\notimos_gnb = gp_minimize(treinar_modelo_gnb, parametros_gnb, random_state=0, verbose=1, n_calls=30, n_random_starts=10)\nprint(otimos_gnb.fun, otimos_gnb.x)\nplot_convergence(otimos_gnb)\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-09-09T17:56:24.045786Z","iopub.execute_input":"2024-09-09T17:56:24.0462Z","iopub.status.idle":"2024-09-09T17:56:33.231197Z","shell.execute_reply.started":"2024-09-09T17:56:24.046156Z","shell.execute_reply":"2024-09-09T17:56:33.229931Z"},"trusted":true},"execution_count":22,"outputs":[{"name":"stdout","text":"Iteration No: 1 started. Evaluating function at random point.\nIteration No: 1 ended. Evaluation done at random point.\nTime taken: 0.0369\nFunction value obtained: -0.8070\nCurrent minimum: -0.8070\nIteration No: 2 started. Evaluating function at random point.\nIteration No: 2 ended. Evaluation done at random point.\nTime taken: 0.0309\nFunction value obtained: -0.8092\nCurrent minimum: -0.8092\nIteration No: 3 started. Evaluating function at random point.\nIteration No: 3 ended. Evaluation done at random point.\nTime taken: 0.0305\nFunction value obtained: -0.8081\nCurrent minimum: -0.8092\nIteration No: 4 started. Evaluating function at random point.\nIteration No: 4 ended. Evaluation done at random point.\nTime taken: 0.0303\nFunction value obtained: -0.8092\nCurrent minimum: -0.8092\nIteration No: 5 started. Evaluating function at random point.\nIteration No: 5 ended. Evaluation done at random point.\nTime taken: 0.0307\nFunction value obtained: -0.8081\nCurrent minimum: -0.8092\nIteration No: 6 started. Evaluating function at random point.\nIteration No: 6 ended. Evaluation done at random point.\nTime taken: 0.0301\nFunction value obtained: -0.8048\nCurrent minimum: -0.8092\nIteration No: 7 started. Evaluating function at random point.\nIteration No: 7 ended. Evaluation done at random point.\nTime taken: 0.0315\nFunction value obtained: -0.8003\nCurrent minimum: -0.8092\nIteration No: 8 started. Evaluating function at random point.\nIteration No: 8 ended. Evaluation done at random point.\nTime taken: 0.0314\nFunction value obtained: -0.8014\nCurrent minimum: -0.8092\nIteration No: 9 started. Evaluating function at random point.\nIteration No: 9 ended. Evaluation done at random point.\nTime taken: 0.0309\nFunction value obtained: -0.8014\nCurrent minimum: -0.8092\nIteration No: 10 started. Evaluating function at random point.\nIteration No: 10 ended. Evaluation done at random point.\nTime taken: 0.4114\nFunction value obtained: -0.8059\nCurrent minimum: -0.8092\nIteration No: 11 started. Searching for the next optimal point.\nIteration No: 11 ended. Search finished for the next optimal point.\nTime taken: 0.3218\nFunction value obtained: -0.8081\nCurrent minimum: -0.8092\nIteration No: 12 started. Searching for the next optimal point.\nIteration No: 12 ended. Search finished for the next optimal point.\nTime taken: 0.3229\nFunction value obtained: -0.8081\nCurrent minimum: -0.8092\nIteration No: 13 started. Searching for the next optimal point.\nIteration No: 13 ended. Search finished for the next optimal point.\nTime taken: 0.3408\nFunction value obtained: -0.8081\nCurrent minimum: -0.8092\nIteration No: 14 started. Searching for the next optimal point.\nIteration No: 14 ended. Search finished for the next optimal point.\nTime taken: 0.3857\nFunction value obtained: -0.8081\nCurrent minimum: -0.8092\nIteration No: 15 started. Searching for the next optimal point.\nIteration No: 15 ended. Search finished for the next optimal point.\nTime taken: 0.3602\nFunction value obtained: -0.8036\nCurrent minimum: -0.8092\nIteration No: 16 started. Searching for the next optimal point.\nIteration No: 16 ended. Search finished for the next optimal point.\nTime taken: 0.4207\nFunction value obtained: -0.8092\nCurrent minimum: -0.8092\nIteration No: 17 started. Searching for the next optimal point.\nIteration No: 17 ended. Search finished for the next optimal point.\nTime taken: 0.3627\nFunction value obtained: -0.8081\nCurrent minimum: -0.8092\nIteration No: 18 started. Searching for the next optimal point.\nIteration No: 18 ended. Search finished for the next optimal point.\nTime taken: 0.3267\nFunction value obtained: -0.8092\nCurrent minimum: -0.8092\nIteration No: 19 started. Searching for the next optimal point.\nIteration No: 19 ended. Search finished for the next optimal point.\nTime taken: 0.3629\nFunction value obtained: -0.8092\nCurrent minimum: -0.8092\nIteration No: 20 started. Searching for the next optimal point.\nIteration No: 20 ended. Search finished for the next optimal point.\nTime taken: 0.4926\nFunction value obtained: -0.8081\nCurrent minimum: -0.8092\nIteration No: 21 started. Searching for the next optimal point.\nIteration No: 21 ended. Search finished for the next optimal point.\nTime taken: 0.4327\nFunction value obtained: -0.8059\nCurrent minimum: -0.8092\nIteration No: 22 started. Searching for the next optimal point.\nIteration No: 22 ended. Search finished for the next optimal point.\nTime taken: 0.3945\nFunction value obtained: -0.8014\nCurrent minimum: -0.8092\nIteration No: 23 started. Searching for the next optimal point.\nIteration No: 23 ended. Search finished for the next optimal point.\nTime taken: 0.4087\nFunction value obtained: -0.8092\nCurrent minimum: -0.8092\nIteration No: 24 started. Searching for the next optimal point.\nIteration No: 24 ended. Search finished for the next optimal point.\nTime taken: 0.4297\nFunction value obtained: -0.8059\nCurrent minimum: -0.8092\nIteration No: 25 started. Searching for the next optimal point.\nIteration No: 25 ended. Search finished for the next optimal point.\nTime taken: 0.4446\nFunction value obtained: -0.8059\nCurrent minimum: -0.8092\nIteration No: 26 started. Searching for the next optimal point.\nIteration No: 26 ended. Search finished for the next optimal point.\nTime taken: 0.4306\nFunction value obtained: -0.8092\nCurrent minimum: -0.8092\nIteration No: 27 started. Searching for the next optimal point.\nIteration No: 27 ended. Search finished for the next optimal point.\nTime taken: 0.4584\nFunction value obtained: -0.8002\nCurrent minimum: -0.8092\nIteration No: 28 started. Searching for the next optimal point.\nIteration No: 28 ended. Search finished for the next optimal point.\nTime taken: 0.4576\nFunction value obtained: -0.8014\nCurrent minimum: -0.8092\nIteration No: 29 started. Searching for the next optimal point.\nIteration No: 29 ended. Search finished for the next optimal point.\nTime taken: 0.5689\nFunction value obtained: -0.8059\nCurrent minimum: -0.8092\nIteration No: 30 started. Searching for the next optimal point.\nIteration No: 30 ended. Search finished for the next optimal point.\nTime taken: 0.4650\nFunction value obtained: -0.8092\nCurrent minimum: -0.8092\n-0.8092384519350813 [0.084426575013836]\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"model_gnb = GaussianNB(var_smoothing=otimos_gnb.x[0])\nscore = cross_val_score(model_gnb, X_train_sc, y_train, cv=10)\nnp.mean(score)","metadata":{"execution":{"iopub.status.busy":"2024-09-09T17:56:33.232958Z","iopub.execute_input":"2024-09-09T17:56:33.233449Z","iopub.status.idle":"2024-09-09T17:56:33.276353Z","shell.execute_reply.started":"2024-09-09T17:56:33.233389Z","shell.execute_reply":"2024-09-09T17:56:33.274971Z"},"trusted":true},"execution_count":23,"outputs":[{"execution_count":23,"output_type":"execute_result","data":{"text/plain":"0.8092384519350813"},"metadata":{}}]},{"cell_type":"markdown","source":"### KNN para classificação","metadata":{}},{"cell_type":"code","source":"from sklearn.neighbors import KNeighborsClassifier\n\nmodel_knn = KNeighborsClassifier(n_neighbors= 5, p = 2, n_jobs = -1 )\n\nscore = cross_val_score(model_knn, X_train_sc, y_train, cv = 10)\n\nnp.mean(score)","metadata":{"execution":{"iopub.status.busy":"2024-09-09T17:56:33.277794Z","iopub.execute_input":"2024-09-09T17:56:33.278223Z","iopub.status.idle":"2024-09-09T17:56:33.536806Z","shell.execute_reply.started":"2024-09-09T17:56:33.278179Z","shell.execute_reply":"2024-09-09T17:56:33.535523Z"},"trusted":true},"execution_count":24,"outputs":[{"execution_count":24,"output_type":"execute_result","data":{"text/plain":"0.811498127340824"},"metadata":{}}]},{"cell_type":"code","source":"def treinar_modelo_knn(parametros):\n    model_knn = KNeighborsClassifier(n_neighbors=parametros[0], \n                                     weights=parametros[1], \n                                     p=parametros[2], \n                                     n_jobs=-1)\n    score = cross_val_score(model_knn, X_train_sc, y_train, cv=10)\n    mean_score = np.mean(score)\n    return -mean_score\n\nparametros_knn = [(1, 30),               # n_neighbors\n                  ('uniform', 'distance'), # weights\n                  (1, 2)]                 # p (Minkowski metric, 1 for Manhattan, 2 for Euclidean)\n\notimos_knn = gp_minimize(treinar_modelo_knn, \n                         parametros_knn, \n                         random_state=0, \n                         verbose=1, \n                         n_calls=30, \n                         n_random_starts=10)\nprint(otimos_knn.fun, otimos_knn.x)\nplot_convergence(otimos_knn)\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-09-09T17:56:33.538419Z","iopub.execute_input":"2024-09-09T17:56:33.538875Z","iopub.status.idle":"2024-09-09T17:56:51.142965Z","shell.execute_reply.started":"2024-09-09T17:56:33.538832Z","shell.execute_reply":"2024-09-09T17:56:51.141721Z"},"trusted":true},"execution_count":25,"outputs":[{"name":"stdout","text":"Iteration No: 1 started. Evaluating function at random point.\nIteration No: 1 ended. Evaluation done at random point.\nTime taken: 0.1809\nFunction value obtained: -0.8025\nCurrent minimum: -0.8025\nIteration No: 2 started. Evaluating function at random point.\nIteration No: 2 ended. Evaluation done at random point.\nTime taken: 0.1835\nFunction value obtained: -0.8036\nCurrent minimum: -0.8036\nIteration No: 3 started. Evaluating function at random point.\nIteration No: 3 ended. Evaluation done at random point.\nTime taken: 0.2456\nFunction value obtained: -0.8204\nCurrent minimum: -0.8204\nIteration No: 4 started. Evaluating function at random point.\nIteration No: 4 ended. Evaluation done at random point.\nTime taken: 0.1827\nFunction value obtained: -0.8059\nCurrent minimum: -0.8204\nIteration No: 5 started. Evaluating function at random point.\nIteration No: 5 ended. Evaluation done at random point.\nTime taken: 0.1841\nFunction value obtained: -0.8047\nCurrent minimum: -0.8204\nIteration No: 6 started. Evaluating function at random point.\nIteration No: 6 ended. Evaluation done at random point.\nTime taken: 0.2456\nFunction value obtained: -0.8126\nCurrent minimum: -0.8204\nIteration No: 7 started. Evaluating function at random point.\nIteration No: 7 ended. Evaluation done at random point.\nTime taken: 0.1826\nFunction value obtained: -0.7992\nCurrent minimum: -0.8204\nIteration No: 8 started. Evaluating function at random point.\nIteration No: 8 ended. Evaluation done at random point.\nTime taken: 0.1841\nFunction value obtained: -0.8025\nCurrent minimum: -0.8204\nIteration No: 9 started. Evaluating function at random point.\nIteration No: 9 ended. Evaluation done at random point.\nTime taken: 0.1829\nFunction value obtained: -0.8036\nCurrent minimum: -0.8204\nIteration No: 10 started. Evaluating function at random point.\nIteration No: 10 ended. Evaluation done at random point.\nTime taken: 0.5797\nFunction value obtained: -0.8115\nCurrent minimum: -0.8204\nIteration No: 11 started. Searching for the next optimal point.\nIteration No: 11 ended. Search finished for the next optimal point.\nTime taken: 0.7975\nFunction value obtained: -0.7498\nCurrent minimum: -0.8204\nIteration No: 12 started. Searching for the next optimal point.\nIteration No: 12 ended. Search finished for the next optimal point.\nTime taken: 0.8418\nFunction value obtained: -0.7622\nCurrent minimum: -0.8204\nIteration No: 13 started. Searching for the next optimal point.\nIteration No: 13 ended. Search finished for the next optimal point.\nTime taken: 0.6842\nFunction value obtained: -0.8205\nCurrent minimum: -0.8205\nIteration No: 14 started. Searching for the next optimal point.\nIteration No: 14 ended. Search finished for the next optimal point.\nTime taken: 0.7023\nFunction value obtained: -0.8204\nCurrent minimum: -0.8205\nIteration No: 15 started. Searching for the next optimal point.\nIteration No: 15 ended. Search finished for the next optimal point.\nTime taken: 0.7169\nFunction value obtained: -0.8159\nCurrent minimum: -0.8205\nIteration No: 16 started. Searching for the next optimal point.\nIteration No: 16 ended. Search finished for the next optimal point.\nTime taken: 0.6371\nFunction value obtained: -0.8036\nCurrent minimum: -0.8205\nIteration No: 17 started. Searching for the next optimal point.\nIteration No: 17 ended. Search finished for the next optimal point.\nTime taken: 0.7295\nFunction value obtained: -0.8036\nCurrent minimum: -0.8205\nIteration No: 18 started. Searching for the next optimal point.\nIteration No: 18 ended. Search finished for the next optimal point.\nTime taken: 0.7896\nFunction value obtained: -0.8182\nCurrent minimum: -0.8205\nIteration No: 19 started. Searching for the next optimal point.\nIteration No: 19 ended. Search finished for the next optimal point.\nTime taken: 0.7339\nFunction value obtained: -0.8182\nCurrent minimum: -0.8205\nIteration No: 20 started. Searching for the next optimal point.\nIteration No: 20 ended. Search finished for the next optimal point.\nTime taken: 0.7446\nFunction value obtained: -0.8160\nCurrent minimum: -0.8205\nIteration No: 21 started. Searching for the next optimal point.\nIteration No: 21 ended. Search finished for the next optimal point.\nTime taken: 0.7400\nFunction value obtained: -0.8227\nCurrent minimum: -0.8227\nIteration No: 22 started. Searching for the next optimal point.\nIteration No: 22 ended. Search finished for the next optimal point.\nTime taken: 0.7488\nFunction value obtained: -0.8115\nCurrent minimum: -0.8227\nIteration No: 23 started. Searching for the next optimal point.\nIteration No: 23 ended. Search finished for the next optimal point.\nTime taken: 0.7160\nFunction value obtained: -0.8115\nCurrent minimum: -0.8227\nIteration No: 24 started. Searching for the next optimal point.\nIteration No: 24 ended. Search finished for the next optimal point.\nTime taken: 0.6838\nFunction value obtained: -0.8014\nCurrent minimum: -0.8227\nIteration No: 25 started. Searching for the next optimal point.\nIteration No: 25 ended. Search finished for the next optimal point.\nTime taken: 0.6891\nFunction value obtained: -0.8036\nCurrent minimum: -0.8227\nIteration No: 26 started. Searching for the next optimal point.\nIteration No: 26 ended. Search finished for the next optimal point.\nTime taken: 0.6421\nFunction value obtained: -0.8104\nCurrent minimum: -0.8227\nIteration No: 27 started. Searching for the next optimal point.\nIteration No: 27 ended. Search finished for the next optimal point.\nTime taken: 0.7985\nFunction value obtained: -0.8193\nCurrent minimum: -0.8227\nIteration No: 28 started. Searching for the next optimal point.\nIteration No: 28 ended. Search finished for the next optimal point.\nTime taken: 0.8343\nFunction value obtained: -0.8160\nCurrent minimum: -0.8227\nIteration No: 29 started. Searching for the next optimal point.\nIteration No: 29 ended. Search finished for the next optimal point.\nTime taken: 0.8633\nFunction value obtained: -0.8093\nCurrent minimum: -0.8227\nIteration No: 30 started. Searching for the next optimal point.\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/skopt/optimizer/optimizer.py:517: UserWarning: The objective has been evaluated at point [30, 'uniform', 2] before, using random point [19, 'uniform', 2]\n  warnings.warn(\n","output_type":"stream"},{"name":"stdout","text":"Iteration No: 30 ended. Search finished for the next optimal point.\nTime taken: 0.7657\nFunction value obtained: -0.8070\nCurrent minimum: -0.8227\n-0.8226716604244695 [28, 'uniform', 2]\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"model_knn = KNeighborsClassifier(n_neighbors=otimos_knn.x[0], \n                                 weights=otimos_knn.x[1], \n                                 p=otimos_knn.x[2], \n                                 n_jobs=-1)\nscore = cross_val_score(model_knn, X_train_sc, y_train, cv=10)\nnp.mean(score)","metadata":{"execution":{"iopub.status.busy":"2024-09-09T17:56:51.144543Z","iopub.execute_input":"2024-09-09T17:56:51.145003Z","iopub.status.idle":"2024-09-09T17:56:51.400655Z","shell.execute_reply.started":"2024-09-09T17:56:51.144956Z","shell.execute_reply":"2024-09-09T17:56:51.399424Z"},"trusted":true},"execution_count":26,"outputs":[{"execution_count":26,"output_type":"execute_result","data":{"text/plain":"0.8226716604244695"},"metadata":{}}]},{"cell_type":"markdown","source":"### SVM para classificação","metadata":{}},{"cell_type":"code","source":"from sklearn.svm import SVC\n\nmodel_svc = SVC(C = 3, \n                kernel = 'rbf', \n                degree = 2, \n                gamma = 0.1)\n\nscore = cross_val_score(model_svc, X_train_sc, y_train, cv = 10)\n\nnp.mean(score)","metadata":{"execution":{"iopub.status.busy":"2024-09-09T17:56:51.402012Z","iopub.execute_input":"2024-09-09T17:56:51.402416Z","iopub.status.idle":"2024-09-09T17:56:51.646284Z","shell.execute_reply.started":"2024-09-09T17:56:51.40236Z","shell.execute_reply":"2024-09-09T17:56:51.645125Z"},"trusted":true},"execution_count":27,"outputs":[{"execution_count":27,"output_type":"execute_result","data":{"text/plain":"0.8316479400749064"},"metadata":{}}]},{"cell_type":"code","source":"# Função de treinamento e avaliação do modelo\ndef treinar_modelo_svc(parametros):\n    model_svc = SVC(\n        C=parametros[0], \n        kernel=parametros[1], \n        gamma=parametros[2], \n        probability=True,\n        random_state=0\n    )\n    score = cross_val_score(model_svc, X_train_sc, y_train, cv=10, n_jobs=-1)\n    mean_score = np.mean(score)\n    return -mean_score\n\n# Espaço de busca para hiperparâmetros\nparametros_svc = [\n    Real(1e-3, 10, \"log-uniform\"),            # C em escala log-uniforme\n    Categorical(['linear', 'rbf', 'poly']),   # kernel\n    Real(1e-6, 1e+1, \"log-uniform\")           # gamma em escala log-uniforme\n]\n\n# Otimização dos hiperparâmetros com gp_minimize\notimos_svc = gp_minimize(\n    treinar_modelo_svc, \n    parametros_svc, \n    random_state=0, \n    verbose=1, \n    n_calls=10, \n    n_random_starts=10\n)\n\n# Plot da convergência\nplot_convergence(otimos_svc)\nplt.show()\n\n# Resultados da otimização\nprint(f\"Melhor Acurácia (SVC): {-otimos_svc.fun}\")\nprint(f\"Melhores Hiperparâmetros (SVC): {otimos_svc.x}\")\n\n\n","metadata":{"execution":{"iopub.status.busy":"2024-09-09T17:56:51.647651Z","iopub.execute_input":"2024-09-09T17:56:51.64805Z","iopub.status.idle":"2024-09-09T17:57:01.009411Z","shell.execute_reply.started":"2024-09-09T17:56:51.648008Z","shell.execute_reply":"2024-09-09T17:57:01.008029Z"},"trusted":true},"execution_count":28,"outputs":[{"name":"stdout","text":"Iteration No: 1 started. Evaluating function at random point.\nIteration No: 1 ended. Evaluation done at random point.\nTime taken: 4.2387\nFunction value obtained: -0.7902\nCurrent minimum: -0.7902\nIteration No: 2 started. Evaluating function at random point.\nIteration No: 2 ended. Evaluation done at random point.\nTime taken: 0.5458\nFunction value obtained: -0.7924\nCurrent minimum: -0.7924\nIteration No: 3 started. Evaluating function at random point.\nIteration No: 3 ended. Evaluation done at random point.\nTime taken: 0.3280\nFunction value obtained: -0.7867\nCurrent minimum: -0.7924\nIteration No: 4 started. Evaluating function at random point.\nIteration No: 4 ended. Evaluation done at random point.\nTime taken: 0.3818\nFunction value obtained: -0.6162\nCurrent minimum: -0.7924\nIteration No: 5 started. Evaluating function at random point.\nIteration No: 5 ended. Evaluation done at random point.\nTime taken: 0.3824\nFunction value obtained: -0.6162\nCurrent minimum: -0.7924\nIteration No: 6 started. Evaluating function at random point.\nIteration No: 6 ended. Evaluation done at random point.\nTime taken: 0.5787\nFunction value obtained: -0.7352\nCurrent minimum: -0.7924\nIteration No: 7 started. Evaluating function at random point.\nIteration No: 7 ended. Evaluation done at random point.\nTime taken: 0.3733\nFunction value obtained: -0.6162\nCurrent minimum: -0.7924\nIteration No: 8 started. Evaluating function at random point.\nIteration No: 8 ended. Evaluation done at random point.\nTime taken: 0.5427\nFunction value obtained: -0.8305\nCurrent minimum: -0.8305\nIteration No: 9 started. Evaluating function at random point.\nIteration No: 9 ended. Evaluation done at random point.\nTime taken: 0.4737\nFunction value obtained: -0.7901\nCurrent minimum: -0.8305\nIteration No: 10 started. Evaluating function at random point.\nIteration No: 10 ended. Evaluation done at random point.\nTime taken: 1.1505\nFunction value obtained: -0.7924\nCurrent minimum: -0.8305\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}},{"name":"stdout","text":"Melhor Acurácia (SVC): 0.8305368289637952\nMelhores Hiperparâmetros (SVC): [1.598243724741151, 'rbf', 0.056514086346912004]\n","output_type":"stream"}]},{"cell_type":"code","source":"model_svc = SVC(C=otimos_svc.x[0], \n                kernel=otimos_svc.x[1], \n                gamma=otimos_svc.x[2], \n                probability=True,\n                random_state=0)\nscore = cross_val_score(model_svc, X_train_sc, y_train, cv=10)\nnp.mean(score)","metadata":{"execution":{"iopub.status.busy":"2024-09-09T17:57:01.011407Z","iopub.execute_input":"2024-09-09T17:57:01.011811Z","iopub.status.idle":"2024-09-09T17:57:01.984415Z","shell.execute_reply.started":"2024-09-09T17:57:01.011765Z","shell.execute_reply":"2024-09-09T17:57:01.983219Z"},"trusted":true},"execution_count":29,"outputs":[{"execution_count":29,"output_type":"execute_result","data":{"text/plain":"0.8305368289637952"},"metadata":{}}]},{"cell_type":"markdown","source":"### Decision Tree","metadata":{}},{"cell_type":"code","source":"from sklearn.tree import DecisionTreeClassifier\n\nmodel_dt = DecisionTreeClassifier(criterion = 'entropy', \n                                  max_depth = 3, \n                                  min_samples_split = 2, \n                                  min_samples_leaf = 1, \n                                  random_state = 0 )\n\nscore = cross_val_score(model_dt, X_train_sc, y_train, cv = 10)\n\nnp.mean(score)","metadata":{"execution":{"iopub.status.busy":"2024-09-09T17:57:01.985919Z","iopub.execute_input":"2024-09-09T17:57:01.986329Z","iopub.status.idle":"2024-09-09T17:57:02.040093Z","shell.execute_reply.started":"2024-09-09T17:57:01.986287Z","shell.execute_reply":"2024-09-09T17:57:02.038867Z"},"trusted":true},"execution_count":30,"outputs":[{"execution_count":30,"output_type":"execute_result","data":{"text/plain":"0.8170536828963796"},"metadata":{}}]},{"cell_type":"code","source":"def treinar_modelo_dt(parametros):\n    model_dt = DecisionTreeClassifier(criterion=parametros[0], \n                                      max_depth=parametros[1], \n                                      min_samples_split=parametros[2], \n                                      min_samples_leaf=parametros[3], \n                                      random_state=0)\n    score = cross_val_score(model_dt, X_train_sc, y_train, cv=10)\n    mean_score = np.mean(score)\n    return -mean_score\n\nparametros_dt = [('entropy', 'gini'),  # criterion\n                 (3, 20),              # max_depth\n                 (5, 15),              # min_samples_split\n                 (1, 10)]              # min_samples_leaf\n\notimos_dt = gp_minimize(treinar_modelo_dt, parametros_dt, random_state=0, verbose=1, n_calls=50, n_random_starts=10)\nprint(otimos_dt.fun, otimos_dt.x)\nplot_convergence(otimos_dt)\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-09-09T17:57:02.04162Z","iopub.execute_input":"2024-09-09T17:57:02.042051Z","iopub.status.idle":"2024-09-09T17:57:39.118294Z","shell.execute_reply.started":"2024-09-09T17:57:02.042008Z","shell.execute_reply":"2024-09-09T17:57:39.117006Z"},"trusted":true},"execution_count":31,"outputs":[{"name":"stdout","text":"Iteration No: 1 started. Evaluating function at random point.\nIteration No: 1 ended. Evaluation done at random point.\nTime taken: 0.0494\nFunction value obtained: -0.8036\nCurrent minimum: -0.8036\nIteration No: 2 started. Evaluating function at random point.\nIteration No: 2 ended. Evaluation done at random point.\nTime taken: 0.0479\nFunction value obtained: -0.8116\nCurrent minimum: -0.8116\nIteration No: 3 started. Evaluating function at random point.\nIteration No: 3 ended. Evaluation done at random point.\nTime taken: 0.0497\nFunction value obtained: -0.8228\nCurrent minimum: -0.8228\nIteration No: 4 started. Evaluating function at random point.\nIteration No: 4 ended. Evaluation done at random point.\nTime taken: 0.0480\nFunction value obtained: -0.8183\nCurrent minimum: -0.8228\nIteration No: 5 started. Evaluating function at random point.\nIteration No: 5 ended. Evaluation done at random point.\nTime taken: 0.0482\nFunction value obtained: -0.8138\nCurrent minimum: -0.8228\nIteration No: 6 started. Evaluating function at random point.\nIteration No: 6 ended. Evaluation done at random point.\nTime taken: 0.0487\nFunction value obtained: -0.8183\nCurrent minimum: -0.8228\nIteration No: 7 started. Evaluating function at random point.\nIteration No: 7 ended. Evaluation done at random point.\nTime taken: 0.0439\nFunction value obtained: -0.8081\nCurrent minimum: -0.8228\nIteration No: 8 started. Evaluating function at random point.\nIteration No: 8 ended. Evaluation done at random point.\nTime taken: 0.0463\nFunction value obtained: -0.8250\nCurrent minimum: -0.8250\nIteration No: 9 started. Evaluating function at random point.\nIteration No: 9 ended. Evaluation done at random point.\nTime taken: 0.0423\nFunction value obtained: -0.8171\nCurrent minimum: -0.8250\nIteration No: 10 started. Evaluating function at random point.\nIteration No: 10 ended. Evaluation done at random point.\nTime taken: 0.5477\nFunction value obtained: -0.8228\nCurrent minimum: -0.8250\nIteration No: 11 started. Searching for the next optimal point.\nIteration No: 11 ended. Search finished for the next optimal point.\nTime taken: 0.5036\nFunction value obtained: -0.8104\nCurrent minimum: -0.8250\nIteration No: 12 started. Searching for the next optimal point.\nIteration No: 12 ended. Search finished for the next optimal point.\nTime taken: 0.6533\nFunction value obtained: -0.8126\nCurrent minimum: -0.8250\nIteration No: 13 started. Searching for the next optimal point.\nIteration No: 13 ended. Search finished for the next optimal point.\nTime taken: 0.7437\nFunction value obtained: -0.8093\nCurrent minimum: -0.8250\nIteration No: 14 started. Searching for the next optimal point.\nIteration No: 14 ended. Search finished for the next optimal point.\nTime taken: 0.6325\nFunction value obtained: -0.8261\nCurrent minimum: -0.8261\nIteration No: 15 started. Searching for the next optimal point.\nIteration No: 15 ended. Search finished for the next optimal point.\nTime taken: 0.7188\nFunction value obtained: -0.8171\nCurrent minimum: -0.8261\nIteration No: 16 started. Searching for the next optimal point.\nIteration No: 16 ended. Search finished for the next optimal point.\nTime taken: 0.8871\nFunction value obtained: -0.8138\nCurrent minimum: -0.8261\nIteration No: 17 started. Searching for the next optimal point.\nIteration No: 17 ended. Search finished for the next optimal point.\nTime taken: 0.6790\nFunction value obtained: -0.8014\nCurrent minimum: -0.8261\nIteration No: 18 started. Searching for the next optimal point.\nIteration No: 18 ended. Search finished for the next optimal point.\nTime taken: 0.8136\nFunction value obtained: -0.8159\nCurrent minimum: -0.8261\nIteration No: 19 started. Searching for the next optimal point.\nIteration No: 19 ended. Search finished for the next optimal point.\nTime taken: 0.9380\nFunction value obtained: -0.8205\nCurrent minimum: -0.8261\nIteration No: 20 started. Searching for the next optimal point.\nIteration No: 20 ended. Search finished for the next optimal point.\nTime taken: 0.8211\nFunction value obtained: -0.8194\nCurrent minimum: -0.8261\nIteration No: 21 started. Searching for the next optimal point.\nIteration No: 21 ended. Search finished for the next optimal point.\nTime taken: 0.6131\nFunction value obtained: -0.8183\nCurrent minimum: -0.8261\nIteration No: 22 started. Searching for the next optimal point.\nIteration No: 22 ended. Search finished for the next optimal point.\nTime taken: 0.8663\nFunction value obtained: -0.8126\nCurrent minimum: -0.8261\nIteration No: 23 started. Searching for the next optimal point.\nIteration No: 23 ended. Search finished for the next optimal point.\nTime taken: 0.9759\nFunction value obtained: -0.8194\nCurrent minimum: -0.8261\nIteration No: 24 started. Searching for the next optimal point.\nIteration No: 24 ended. Search finished for the next optimal point.\nTime taken: 0.8527\nFunction value obtained: -0.8239\nCurrent minimum: -0.8261\nIteration No: 25 started. Searching for the next optimal point.\nIteration No: 25 ended. Search finished for the next optimal point.\nTime taken: 0.8914\nFunction value obtained: -0.8261\nCurrent minimum: -0.8261\nIteration No: 26 started. Searching for the next optimal point.\nIteration No: 26 ended. Search finished for the next optimal point.\nTime taken: 0.7818\nFunction value obtained: -0.8060\nCurrent minimum: -0.8261\nIteration No: 27 started. Searching for the next optimal point.\nIteration No: 27 ended. Search finished for the next optimal point.\nTime taken: 0.7838\nFunction value obtained: -0.8082\nCurrent minimum: -0.8261\nIteration No: 28 started. Searching for the next optimal point.\nIteration No: 28 ended. Search finished for the next optimal point.\nTime taken: 0.9011\nFunction value obtained: -0.8216\nCurrent minimum: -0.8261\nIteration No: 29 started. Searching for the next optimal point.\nIteration No: 29 ended. Search finished for the next optimal point.\nTime taken: 0.8070\nFunction value obtained: -0.8159\nCurrent minimum: -0.8261\nIteration No: 30 started. Searching for the next optimal point.\nIteration No: 30 ended. Search finished for the next optimal point.\nTime taken: 1.0299\nFunction value obtained: -0.8048\nCurrent minimum: -0.8261\nIteration No: 31 started. Searching for the next optimal point.\nIteration No: 31 ended. Search finished for the next optimal point.\nTime taken: 0.9884\nFunction value obtained: -0.8159\nCurrent minimum: -0.8261\nIteration No: 32 started. Searching for the next optimal point.\nIteration No: 32 ended. Search finished for the next optimal point.\nTime taken: 1.1372\nFunction value obtained: -0.8217\nCurrent minimum: -0.8261\nIteration No: 33 started. Searching for the next optimal point.\nIteration No: 33 ended. Search finished for the next optimal point.\nTime taken: 1.1614\nFunction value obtained: -0.8217\nCurrent minimum: -0.8261\nIteration No: 34 started. Searching for the next optimal point.\nIteration No: 34 ended. Search finished for the next optimal point.\nTime taken: 1.0662\nFunction value obtained: -0.8161\nCurrent minimum: -0.8261\nIteration No: 35 started. Searching for the next optimal point.\nIteration No: 35 ended. Search finished for the next optimal point.\nTime taken: 1.1007\nFunction value obtained: -0.8205\nCurrent minimum: -0.8261\nIteration No: 36 started. Searching for the next optimal point.\nIteration No: 36 ended. Search finished for the next optimal point.\nTime taken: 1.0596\nFunction value obtained: -0.8239\nCurrent minimum: -0.8261\nIteration No: 37 started. Searching for the next optimal point.\nIteration No: 37 ended. Search finished for the next optimal point.\nTime taken: 1.1707\nFunction value obtained: -0.8250\nCurrent minimum: -0.8261\nIteration No: 38 started. Searching for the next optimal point.\nIteration No: 38 ended. Search finished for the next optimal point.\nTime taken: 0.9991\nFunction value obtained: -0.8227\nCurrent minimum: -0.8261\nIteration No: 39 started. Searching for the next optimal point.\nIteration No: 39 ended. Search finished for the next optimal point.\nTime taken: 0.9077\nFunction value obtained: -0.8261\nCurrent minimum: -0.8261\nIteration No: 40 started. Searching for the next optimal point.\nIteration No: 40 ended. Search finished for the next optimal point.\nTime taken: 0.8616\nFunction value obtained: -0.8261\nCurrent minimum: -0.8261\nIteration No: 41 started. Searching for the next optimal point.\nIteration No: 41 ended. Search finished for the next optimal point.\nTime taken: 0.8881\nFunction value obtained: -0.8250\nCurrent minimum: -0.8261\nIteration No: 42 started. Searching for the next optimal point.\nIteration No: 42 ended. Search finished for the next optimal point.\nTime taken: 0.9275\nFunction value obtained: -0.8250\nCurrent minimum: -0.8261\nIteration No: 43 started. Searching for the next optimal point.\nIteration No: 43 ended. Search finished for the next optimal point.\nTime taken: 0.9186\nFunction value obtained: -0.8148\nCurrent minimum: -0.8261\nIteration No: 44 started. Searching for the next optimal point.\nIteration No: 44 ended. Search finished for the next optimal point.\nTime taken: 0.9585\nFunction value obtained: -0.8182\nCurrent minimum: -0.8261\nIteration No: 45 started. Searching for the next optimal point.\nIteration No: 45 ended. Search finished for the next optimal point.\nTime taken: 0.8830\nFunction value obtained: -0.8250\nCurrent minimum: -0.8261\nIteration No: 46 started. Searching for the next optimal point.\nIteration No: 46 ended. Search finished for the next optimal point.\nTime taken: 0.8766\nFunction value obtained: -0.8261\nCurrent minimum: -0.8261\nIteration No: 47 started. Searching for the next optimal point.\nIteration No: 47 ended. Search finished for the next optimal point.\nTime taken: 0.9283\nFunction value obtained: -0.8037\nCurrent minimum: -0.8261\nIteration No: 48 started. Searching for the next optimal point.\nIteration No: 48 ended. Search finished for the next optimal point.\nTime taken: 1.0608\nFunction value obtained: -0.8216\nCurrent minimum: -0.8261\nIteration No: 49 started. Searching for the next optimal point.\nIteration No: 49 ended. Search finished for the next optimal point.\nTime taken: 1.0181\nFunction value obtained: -0.8171\nCurrent minimum: -0.8261\nIteration No: 50 started. Searching for the next optimal point.\nIteration No: 50 ended. Search finished for the next optimal point.\nTime taken: 0.9459\nFunction value obtained: -0.8171\nCurrent minimum: -0.8261\n-0.8261423220973783 ['entropy', 8, 15, 6]\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"model_dt = DecisionTreeClassifier(criterion=otimos_dt.x[0], \n                                  max_depth=otimos_dt.x[1], \n                                  min_samples_split=otimos_dt.x[2], \n                                  min_samples_leaf=otimos_dt.x[3], \n                                  random_state=0)\nscore = cross_val_score(model_dt, X_train_sc, y_train, cv=10)\nnp.mean(score)","metadata":{"execution":{"iopub.status.busy":"2024-09-09T17:57:39.120063Z","iopub.execute_input":"2024-09-09T17:57:39.120449Z","iopub.status.idle":"2024-09-09T17:57:39.184282Z","shell.execute_reply.started":"2024-09-09T17:57:39.120407Z","shell.execute_reply":"2024-09-09T17:57:39.183009Z"},"trusted":true},"execution_count":32,"outputs":[{"execution_count":32,"output_type":"execute_result","data":{"text/plain":"0.8261423220973783"},"metadata":{}}]},{"cell_type":"markdown","source":"### Random Forest","metadata":{}},{"cell_type":"code","source":"from sklearn.ensemble import RandomForestClassifier\n\nmodel_rf = RandomForestClassifier(criterion = 'entropy', \n                                  n_estimators = 100, \n                                  max_depth = 3, \n                                  min_samples_split = 2, \n                                  min_samples_leaf = 1, \n                                  random_state = 0, \n                                  n_jobs = -1 )\n\nscore = cross_val_score(model_rf, X_train_sc, y_train, cv = 10)\n\nnp.mean(score)","metadata":{"execution":{"iopub.status.busy":"2024-09-09T17:57:39.185631Z","iopub.execute_input":"2024-09-09T17:57:39.186038Z","iopub.status.idle":"2024-09-09T17:57:43.366283Z","shell.execute_reply.started":"2024-09-09T17:57:39.185994Z","shell.execute_reply":"2024-09-09T17:57:43.365002Z"},"trusted":true},"execution_count":33,"outputs":[{"execution_count":33,"output_type":"execute_result","data":{"text/plain":"0.8182147315855179"},"metadata":{}}]},{"cell_type":"markdown","source":"#### Otimização de hiperparametros","metadata":{}},{"cell_type":"code","source":"def treinar_modelo(parametros):\n    model_rf = RandomForestClassifier(criterion = parametros[0], \n                                      n_estimators = parametros[1], \n                                      max_depth = parametros[2], \n                                      min_samples_split = parametros[3], \n                                      min_samples_leaf = parametros[4], \n                                      random_state = 0, \n                                      n_jobs = -1 )\n    score = cross_val_score(model_rf, X_train_sc, y_train, cv = 10)\n    mean_score = np.mean(score)\n    return - mean_score\n\nparametros = [('entropy', 'gini'), \n              (500, 1200), \n              (3, 20),\n              (5, 15),\n              (1, 10)]\n\notimos = gp_minimize(treinar_modelo, \n                     parametros, \n                     random_state = 0, \n                     verbose = 1, \n                     n_calls = 30, \n                     n_random_starts = 10 , \n                     n_jobs = -1 )\n\nprint(otimos.fun, otimos.x)\nplot_convergence(otimos)\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-09-09T17:57:43.367947Z","iopub.execute_input":"2024-09-09T17:57:43.368444Z","iopub.status.idle":"2024-09-09T18:15:49.852457Z","shell.execute_reply.started":"2024-09-09T17:57:43.368387Z","shell.execute_reply":"2024-09-09T18:15:49.851202Z"},"trusted":true},"execution_count":34,"outputs":[{"name":"stdout","text":"Iteration No: 1 started. Evaluating function at random point.\nIteration No: 1 ended. Evaluation done at random point.\nTime taken: 43.4446\nFunction value obtained: -0.8250\nCurrent minimum: -0.8250\nIteration No: 2 started. Evaluating function at random point.\nIteration No: 2 ended. Evaluation done at random point.\nTime taken: 28.1921\nFunction value obtained: -0.8294\nCurrent minimum: -0.8294\nIteration No: 3 started. Evaluating function at random point.\nIteration No: 3 ended. Evaluation done at random point.\nTime taken: 33.3567\nFunction value obtained: -0.8295\nCurrent minimum: -0.8295\nIteration No: 4 started. Evaluating function at random point.\nIteration No: 4 ended. Evaluation done at random point.\nTime taken: 30.5990\nFunction value obtained: -0.8216\nCurrent minimum: -0.8295\nIteration No: 5 started. Evaluating function at random point.\nIteration No: 5 ended. Evaluation done at random point.\nTime taken: 42.2315\nFunction value obtained: -0.8250\nCurrent minimum: -0.8295\nIteration No: 6 started. Evaluating function at random point.\nIteration No: 6 ended. Evaluation done at random point.\nTime taken: 34.9878\nFunction value obtained: -0.8295\nCurrent minimum: -0.8295\nIteration No: 7 started. Evaluating function at random point.\nIteration No: 7 ended. Evaluation done at random point.\nTime taken: 40.0749\nFunction value obtained: -0.8261\nCurrent minimum: -0.8295\nIteration No: 8 started. Evaluating function at random point.\nIteration No: 8 ended. Evaluation done at random point.\nTime taken: 26.1406\nFunction value obtained: -0.8295\nCurrent minimum: -0.8295\nIteration No: 9 started. Evaluating function at random point.\nIteration No: 9 ended. Evaluation done at random point.\nTime taken: 44.6264\nFunction value obtained: -0.8238\nCurrent minimum: -0.8295\nIteration No: 10 started. Evaluating function at random point.\nIteration No: 10 ended. Evaluation done at random point.\nTime taken: 31.8224\nFunction value obtained: -0.8261\nCurrent minimum: -0.8295\nIteration No: 11 started. Searching for the next optimal point.\nIteration No: 11 ended. Search finished for the next optimal point.\nTime taken: 29.1235\nFunction value obtained: -0.8272\nCurrent minimum: -0.8295\nIteration No: 12 started. Searching for the next optimal point.\nIteration No: 12 ended. Search finished for the next optimal point.\nTime taken: 45.0466\nFunction value obtained: -0.8171\nCurrent minimum: -0.8295\nIteration No: 13 started. Searching for the next optimal point.\nIteration No: 13 ended. Search finished for the next optimal point.\nTime taken: 38.9982\nFunction value obtained: -0.8205\nCurrent minimum: -0.8295\nIteration No: 14 started. Searching for the next optimal point.\nIteration No: 14 ended. Search finished for the next optimal point.\nTime taken: 22.6764\nFunction value obtained: -0.8250\nCurrent minimum: -0.8295\nIteration No: 15 started. Searching for the next optimal point.\nIteration No: 15 ended. Search finished for the next optimal point.\nTime taken: 41.2382\nFunction value obtained: -0.8137\nCurrent minimum: -0.8295\nIteration No: 16 started. Searching for the next optimal point.\nIteration No: 16 ended. Search finished for the next optimal point.\nTime taken: 20.3365\nFunction value obtained: -0.8272\nCurrent minimum: -0.8295\nIteration No: 17 started. Searching for the next optimal point.\nIteration No: 17 ended. Search finished for the next optimal point.\nTime taken: 19.9781\nFunction value obtained: -0.8205\nCurrent minimum: -0.8295\nIteration No: 18 started. Searching for the next optimal point.\nIteration No: 18 ended. Search finished for the next optimal point.\nTime taken: 21.2209\nFunction value obtained: -0.8160\nCurrent minimum: -0.8295\nIteration No: 19 started. Searching for the next optimal point.\nIteration No: 19 ended. Search finished for the next optimal point.\nTime taken: 21.7220\nFunction value obtained: -0.8317\nCurrent minimum: -0.8317\nIteration No: 20 started. Searching for the next optimal point.\nIteration No: 20 ended. Search finished for the next optimal point.\nTime taken: 49.2762\nFunction value obtained: -0.8329\nCurrent minimum: -0.8329\nIteration No: 21 started. Searching for the next optimal point.\nIteration No: 21 ended. Search finished for the next optimal point.\nTime taken: 49.3298\nFunction value obtained: -0.8329\nCurrent minimum: -0.8329\nIteration No: 22 started. Searching for the next optimal point.\nIteration No: 22 ended. Search finished for the next optimal point.\nTime taken: 21.1904\nFunction value obtained: -0.8295\nCurrent minimum: -0.8329\nIteration No: 23 started. Searching for the next optimal point.\nIteration No: 23 ended. Search finished for the next optimal point.\nTime taken: 47.5056\nFunction value obtained: -0.8239\nCurrent minimum: -0.8329\nIteration No: 24 started. Searching for the next optimal point.\nIteration No: 24 ended. Search finished for the next optimal point.\nTime taken: 43.0460\nFunction value obtained: -0.8295\nCurrent minimum: -0.8329\nIteration No: 25 started. Searching for the next optimal point.\nIteration No: 25 ended. Search finished for the next optimal point.\nTime taken: 47.5450\nFunction value obtained: -0.8272\nCurrent minimum: -0.8329\nIteration No: 26 started. Searching for the next optimal point.\nIteration No: 26 ended. Search finished for the next optimal point.\nTime taken: 46.9972\nFunction value obtained: -0.8205\nCurrent minimum: -0.8329\nIteration No: 27 started. Searching for the next optimal point.\nIteration No: 27 ended. Search finished for the next optimal point.\nTime taken: 22.7234\nFunction value obtained: -0.8250\nCurrent minimum: -0.8329\nIteration No: 28 started. Searching for the next optimal point.\nIteration No: 28 ended. Search finished for the next optimal point.\nTime taken: 48.0252\nFunction value obtained: -0.8284\nCurrent minimum: -0.8329\nIteration No: 29 started. Searching for the next optimal point.\nIteration No: 29 ended. Search finished for the next optimal point.\nTime taken: 47.9324\nFunction value obtained: -0.8306\nCurrent minimum: -0.8329\nIteration No: 30 started. Searching for the next optimal point.\nIteration No: 30 ended. Search finished for the next optimal point.\nTime taken: 46.5833\nFunction value obtained: -0.8216\nCurrent minimum: -0.8329\n-0.8328589263420723 ['entropy', 1200, 20, 7, 6]\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"model_rf = RandomForestClassifier(criterion = otimos.x[0], \n                                  n_estimators = otimos.x[1], \n                                  max_depth = otimos.x[2], \n                                  min_samples_split = otimos.x[3], \n                                  min_samples_leaf = otimos.x[4], \n                                  random_state = 0, \n                                  n_jobs = -1 )\nscore = cross_val_score(model_rf, X_train_sc, y_train, cv = 10)\n\nnp.mean(score)","metadata":{"execution":{"iopub.status.busy":"2024-09-09T18:15:49.854419Z","iopub.execute_input":"2024-09-09T18:15:49.85496Z","iopub.status.idle":"2024-09-09T18:16:37.57123Z","shell.execute_reply.started":"2024-09-09T18:15:49.854869Z","shell.execute_reply":"2024-09-09T18:16:37.569799Z"},"trusted":true},"execution_count":35,"outputs":[{"execution_count":35,"output_type":"execute_result","data":{"text/plain":"0.8328589263420723"},"metadata":{}}]},{"cell_type":"code","source":"from skopt import gp_minimize\nfrom skopt.space import Real, Integer, Categorical\nfrom skopt.plots import plot_convergence\nfrom xgboost import XGBClassifier\nfrom sklearn.model_selection import cross_val_score\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Função de treinamento e avaliação do modelo\ndef treinar_modelo_xgb(parametros):\n    model_xgb = XGBClassifier(\n        n_estimators=parametros[0],\n        learning_rate=parametros[1],\n        max_depth=parametros[2],\n        min_child_weight=parametros[3],\n        subsample=parametros[4],\n        colsample_bytree=parametros[5],\n        gamma=parametros[6],\n        random_state=0,\n        use_label_encoder=False,\n        eval_metric='logloss'\n    )\n    \n    # Validação cruzada para avaliar o modelo\n    score = cross_val_score(model_xgb, X_train_sc, y_train, cv=10, n_jobs=-1)\n    mean_score = np.mean(score)\n    return -mean_score  # Maximizar a acurácia é equivalente a minimizar o negativo da acurácia\n\n# Espaço de busca para hiperparâmetros\nparametros = [\n    Integer(100, 1200),  # n_estimators\n    Real(0.01, 0.3, 'log-uniform'),  # learning_rate\n    Integer(3, 10),  # max_depth\n    Integer(1, 10),  # min_child_weight\n    Real(0.6, 1.0),  # subsample\n    Real(0.6, 1.0),  # colsample_bytree\n    Real(0, 5)  # gamma\n]\n\n# Otimização dos hiperparâmetros com gp_minimize\notimos = gp_minimize(\n    treinar_modelo_xgb, \n    parametros, \n    random_state=0, \n    verbose=1, \n    n_calls=50, \n    n_random_starts=10\n)\n\n# Resultados da otimização\nprint(f\"Melhor Acurácia: {-otimos.fun}\")\nprint(f\"Melhores Hiperparâmetros: {otimos.x}\")\n\n# Plot da convergência\nplot_convergence(otimos)\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-09-09T18:41:10.347734Z","iopub.execute_input":"2024-09-09T18:41:10.348565Z","iopub.status.idle":"2024-09-09T18:42:30.411913Z","shell.execute_reply.started":"2024-09-09T18:41:10.348504Z","shell.execute_reply":"2024-09-09T18:42:30.410709Z"},"trusted":true},"execution_count":43,"outputs":[{"name":"stdout","text":"Iteration No: 1 started. Evaluating function at random point.\nIteration No: 1 ended. Evaluation done at random point.\nTime taken: 0.6967\nFunction value obtained: -0.8250\nCurrent minimum: -0.8250\nIteration No: 2 started. Evaluating function at random point.\nIteration No: 2 ended. Evaluation done at random point.\nTime taken: 0.2533\nFunction value obtained: -0.8137\nCurrent minimum: -0.8250\nIteration No: 3 started. Evaluating function at random point.\nIteration No: 3 ended. Evaluation done at random point.\nTime taken: 0.4935\nFunction value obtained: -0.8070\nCurrent minimum: -0.8250\nIteration No: 4 started. Evaluating function at random point.\nIteration No: 4 ended. Evaluation done at random point.\nTime taken: 0.8770\nFunction value obtained: -0.8216\nCurrent minimum: -0.8250\nIteration No: 5 started. Evaluating function at random point.\nIteration No: 5 ended. Evaluation done at random point.\nTime taken: 0.2979\nFunction value obtained: -0.8160\nCurrent minimum: -0.8250\nIteration No: 6 started. Evaluating function at random point.\nIteration No: 6 ended. Evaluation done at random point.\nTime taken: 0.3439\nFunction value obtained: -0.8058\nCurrent minimum: -0.8250\nIteration No: 7 started. Evaluating function at random point.\nIteration No: 7 ended. Evaluation done at random point.\nTime taken: 0.2483\nFunction value obtained: -0.8317\nCurrent minimum: -0.8317\nIteration No: 8 started. Evaluating function at random point.\nIteration No: 8 ended. Evaluation done at random point.\nTime taken: 0.5392\nFunction value obtained: -0.8103\nCurrent minimum: -0.8317\nIteration No: 9 started. Evaluating function at random point.\nIteration No: 9 ended. Evaluation done at random point.\nTime taken: 0.7948\nFunction value obtained: -0.8351\nCurrent minimum: -0.8351\nIteration No: 10 started. Evaluating function at random point.\nIteration No: 10 ended. Evaluation done at random point.\nTime taken: 1.5171\nFunction value obtained: -0.8204\nCurrent minimum: -0.8351\nIteration No: 11 started. Searching for the next optimal point.\nIteration No: 11 ended. Search finished for the next optimal point.\nTime taken: 1.3420\nFunction value obtained: -0.8272\nCurrent minimum: -0.8351\nIteration No: 12 started. Searching for the next optimal point.\nIteration No: 12 ended. Search finished for the next optimal point.\nTime taken: 1.6543\nFunction value obtained: -0.8238\nCurrent minimum: -0.8351\nIteration No: 13 started. Searching for the next optimal point.\nIteration No: 13 ended. Search finished for the next optimal point.\nTime taken: 1.6517\nFunction value obtained: -0.8284\nCurrent minimum: -0.8351\nIteration No: 14 started. Searching for the next optimal point.\nIteration No: 14 ended. Search finished for the next optimal point.\nTime taken: 1.0871\nFunction value obtained: -0.8227\nCurrent minimum: -0.8351\nIteration No: 15 started. Searching for the next optimal point.\nIteration No: 15 ended. Search finished for the next optimal point.\nTime taken: 1.3753\nFunction value obtained: -0.8272\nCurrent minimum: -0.8351\nIteration No: 16 started. Searching for the next optimal point.\nIteration No: 16 ended. Search finished for the next optimal point.\nTime taken: 0.8521\nFunction value obtained: -0.8328\nCurrent minimum: -0.8351\nIteration No: 17 started. Searching for the next optimal point.\nIteration No: 17 ended. Search finished for the next optimal point.\nTime taken: 1.5219\nFunction value obtained: -0.8339\nCurrent minimum: -0.8351\nIteration No: 18 started. Searching for the next optimal point.\nIteration No: 18 ended. Search finished for the next optimal point.\nTime taken: 1.9084\nFunction value obtained: -0.8250\nCurrent minimum: -0.8351\nIteration No: 19 started. Searching for the next optimal point.\nIteration No: 19 ended. Search finished for the next optimal point.\nTime taken: 1.6185\nFunction value obtained: -0.8306\nCurrent minimum: -0.8351\nIteration No: 20 started. Searching for the next optimal point.\nIteration No: 20 ended. Search finished for the next optimal point.\nTime taken: 1.0112\nFunction value obtained: -0.8070\nCurrent minimum: -0.8351\nIteration No: 21 started. Searching for the next optimal point.\nIteration No: 21 ended. Search finished for the next optimal point.\nTime taken: 1.5027\nFunction value obtained: -0.8148\nCurrent minimum: -0.8351\nIteration No: 22 started. Searching for the next optimal point.\nIteration No: 22 ended. Search finished for the next optimal point.\nTime taken: 2.1274\nFunction value obtained: -0.8250\nCurrent minimum: -0.8351\nIteration No: 23 started. Searching for the next optimal point.\nIteration No: 23 ended. Search finished for the next optimal point.\nTime taken: 0.9102\nFunction value obtained: -0.8215\nCurrent minimum: -0.8351\nIteration No: 24 started. Searching for the next optimal point.\nIteration No: 24 ended. Search finished for the next optimal point.\nTime taken: 1.6837\nFunction value obtained: -0.8328\nCurrent minimum: -0.8351\nIteration No: 25 started. Searching for the next optimal point.\nIteration No: 25 ended. Search finished for the next optimal point.\nTime taken: 1.2791\nFunction value obtained: -0.8317\nCurrent minimum: -0.8351\nIteration No: 26 started. Searching for the next optimal point.\nIteration No: 26 ended. Search finished for the next optimal point.\nTime taken: 1.0175\nFunction value obtained: -0.8160\nCurrent minimum: -0.8351\nIteration No: 27 started. Searching for the next optimal point.\nIteration No: 27 ended. Search finished for the next optimal point.\nTime taken: 1.8850\nFunction value obtained: -0.8137\nCurrent minimum: -0.8351\nIteration No: 28 started. Searching for the next optimal point.\nIteration No: 28 ended. Search finished for the next optimal point.\nTime taken: 1.7914\nFunction value obtained: -0.8160\nCurrent minimum: -0.8351\nIteration No: 29 started. Searching for the next optimal point.\nIteration No: 29 ended. Search finished for the next optimal point.\nTime taken: 1.4357\nFunction value obtained: -0.8250\nCurrent minimum: -0.8351\nIteration No: 30 started. Searching for the next optimal point.\nIteration No: 30 ended. Search finished for the next optimal point.\nTime taken: 2.4933\nFunction value obtained: -0.8103\nCurrent minimum: -0.8351\nIteration No: 31 started. Searching for the next optimal point.\nIteration No: 31 ended. Search finished for the next optimal point.\nTime taken: 1.8382\nFunction value obtained: -0.8395\nCurrent minimum: -0.8395\nIteration No: 32 started. Searching for the next optimal point.\nIteration No: 32 ended. Search finished for the next optimal point.\nTime taken: 2.3420\nFunction value obtained: -0.8092\nCurrent minimum: -0.8395\nIteration No: 33 started. Searching for the next optimal point.\nIteration No: 33 ended. Search finished for the next optimal point.\nTime taken: 2.1799\nFunction value obtained: -0.8306\nCurrent minimum: -0.8395\nIteration No: 34 started. Searching for the next optimal point.\nIteration No: 34 ended. Search finished for the next optimal point.\nTime taken: 3.4280\nFunction value obtained: -0.8306\nCurrent minimum: -0.8395\nIteration No: 35 started. Searching for the next optimal point.\nIteration No: 35 ended. Search finished for the next optimal point.\nTime taken: 2.7803\nFunction value obtained: -0.8272\nCurrent minimum: -0.8395\nIteration No: 36 started. Searching for the next optimal point.\nIteration No: 36 ended. Search finished for the next optimal point.\nTime taken: 2.0373\nFunction value obtained: -0.8340\nCurrent minimum: -0.8395\nIteration No: 37 started. Searching for the next optimal point.\nIteration No: 37 ended. Search finished for the next optimal point.\nTime taken: 1.8800\nFunction value obtained: -0.8295\nCurrent minimum: -0.8395\nIteration No: 38 started. Searching for the next optimal point.\nIteration No: 38 ended. Search finished for the next optimal point.\nTime taken: 1.5924\nFunction value obtained: -0.8194\nCurrent minimum: -0.8395\nIteration No: 39 started. Searching for the next optimal point.\nIteration No: 39 ended. Search finished for the next optimal point.\nTime taken: 3.0221\nFunction value obtained: -0.8306\nCurrent minimum: -0.8395\nIteration No: 40 started. Searching for the next optimal point.\nIteration No: 40 ended. Search finished for the next optimal point.\nTime taken: 1.9404\nFunction value obtained: -0.8171\nCurrent minimum: -0.8395\nIteration No: 41 started. Searching for the next optimal point.\nIteration No: 41 ended. Search finished for the next optimal point.\nTime taken: 1.2549\nFunction value obtained: -0.8283\nCurrent minimum: -0.8395\nIteration No: 42 started. Searching for the next optimal point.\nIteration No: 42 ended. Search finished for the next optimal point.\nTime taken: 1.4330\nFunction value obtained: -0.8250\nCurrent minimum: -0.8395\nIteration No: 43 started. Searching for the next optimal point.\nIteration No: 43 ended. Search finished for the next optimal point.\nTime taken: 2.0755\nFunction value obtained: -0.8182\nCurrent minimum: -0.8395\nIteration No: 44 started. Searching for the next optimal point.\nIteration No: 44 ended. Search finished for the next optimal point.\nTime taken: 1.6540\nFunction value obtained: -0.8171\nCurrent minimum: -0.8395\nIteration No: 45 started. Searching for the next optimal point.\nIteration No: 45 ended. Search finished for the next optimal point.\nTime taken: 1.6884\nFunction value obtained: -0.8295\nCurrent minimum: -0.8395\nIteration No: 46 started. Searching for the next optimal point.\nIteration No: 46 ended. Search finished for the next optimal point.\nTime taken: 3.2773\nFunction value obtained: -0.8093\nCurrent minimum: -0.8395\nIteration No: 47 started. Searching for the next optimal point.\nIteration No: 47 ended. Search finished for the next optimal point.\nTime taken: 2.2218\nFunction value obtained: -0.8350\nCurrent minimum: -0.8395\nIteration No: 48 started. Searching for the next optimal point.\nIteration No: 48 ended. Search finished for the next optimal point.\nTime taken: 2.3418\nFunction value obtained: -0.8317\nCurrent minimum: -0.8395\nIteration No: 49 started. Searching for the next optimal point.\nIteration No: 49 ended. Search finished for the next optimal point.\nTime taken: 2.2730\nFunction value obtained: -0.8305\nCurrent minimum: -0.8395\nIteration No: 50 started. Searching for the next optimal point.\nIteration No: 50 ended. Search finished for the next optimal point.\nTime taken: 2.1944\nFunction value obtained: -0.8339\nCurrent minimum: -0.8395\nMelhor Acurácia: 0.8395380774032459\nMelhores Hiperparâmetros: [806, 0.06331997680599696, 4, 7, 0.8816707199478737, 0.8556595075648357, 0.34920504011211784]\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"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IiKd07jHatmyZeLK6++++y6uX7+OAQMG4NChQ1i/fr3WAiRqrMp5VvmFJSh+zNcuERGR7mjcYzV8+HDxe19fX/z888/IycmBg4OD+GQgkT5UncCe/bAAXm2d9BgNERG1Jlp934ejoyOLKtI7l6oT2DkcSEREOsQXqVGLo7aWFSewExGRDrGwohan6pIL2VxygYiIdIiFFbU4XCSUiIj0hYUVtThcJJSIiPRF46cCAUCpVCIrKwvFxcVQKBRwdHTUVlxEGrOylMPaSo7ColL2WBERkU41useqoKAAmzdvxsCBA2FrawsvLy/4+/tDoVDA09MTUVFROHfuXHPEStRglcOB2Q8KoFIJeo6GiIhai0YVVmvXroWXlxe2bt2KsLAwHDhwAGlpafjll1+QlJSEt99+G+Xl5Rg2bBhGjBiBq1evNlfcRHWqHA5UllfgUV6xnqMhIqLWolFDgefOncOpU6fQpUuXGvf36tULM2fORGxsLLZu3YrExER06NBBK4ESNYb6kgv5cHKw0mM0RETUWjSqsPrXv/4lfl9QUCC+hPlpcrkcr7zyStMiI2qCpyewd+7gpsdoiIiotdD4qcABAwYgKytLm7EQaY3akgv3OYGdiIh0Q+PCqnv37ujduzd+/vlnte1paWkIDw9vcmBETfH0UCAREZEuaFxYbd26FdOnT0f//v3x/fff45dffkFERASCg4NhYmKizRiJGk19KJA9VkREpBtNWscqOjoacrkcQ4cORUVFBUJDQ5GUlIRevXppKz4ijTg5WMNEKkGFSmCPFRER6YzGPVb37t3D3Llz8fe//x2dO3eGTCbD9OnTWVSRQTA1kcLZ0RoAcO8+CysiItINjQsrb29vnDp1Cnv37kVqair27duHWbNm4cMPP9RmfEQaq5xnlZv/GKWlSj1HQ0RErYHGQ4FffPEFJk6cKH4eMWIEjh8/jueffx43btzApk2btBIgkaaePBl4GwBw72EB2rnzlUtERNS8NO6xqlpUVerRowfOnDmDhISEJgVFpA1qE9i55AIREelAowqrW7du1dvGy8sLZ86cAQDcvn1bs6iItEBtLStOYCciIh1oVGH17LPPYvbs2XW+ZDkvLw9ff/01unbtin379jU5QCJNuTy1+joREVFza9Qcq/T0dLz//vsYOnQozM3NERwcDHd3d5ibm+PRo0f46aefcOXKFfTo0QOrVq3iQqGkV+o9VhwKJCKi5teoHqsPPvgA77//Pu7evYtNmzahQ4cOePDgAa5evQoAmDx5MlJTU5GUlNRsRVVOTg4mT54MW1tb2NvbIzIyEoWFhXUek5WVhSlTpsDV1RVWVlbo0aNHtd60F154Ae3atYO5uTnc3NwwZcoU3Llzp8bzXbt2DTY2NrC3t9fWbVEzaKOoOseKPVZERNT8GtVj9dFHH2HRokVwcXHBt99+i//3//4fLC0tmyu2Gk2ePBl3795FfHw8lEolZsyYgVmzZmHnzp21HjN16lTk5ubi4MGDcHZ2xs6dOxEREYEffvgB3bt3BwAMHjwYb731Ftzc3HD79m0sWrQI48ePF+eLVVIqlZg0aRIGDBhQbR8ZFmtLOSwtzFD8uIw9VkREpBON6rFyd3fHhQsXAABfffUVioqKmiWo2qSnp+Pw4cP47LPP0Lt3b/Tv3x8bNmzArl27au1dAoAzZ87gtddeQ69eveDj44Nly5bB3t4eqampYpv58+ejT58+8PT0RN++fbFkyRKcPXsWSqX6+kfLli2Dn58fIiIimu0+STskEon4ZGD2g3wIgqDniIiIqKVrVI/VwoULMWrUKPTu3RsA8M9//hP9+vVDQEAALCwsmiXAqpKSkmBvb4+ePXuK28LCwiCVSpGcnIyxY8fWeFzfvn2xe/dujBw5Evb29tizZw9KSkowaNCgGtvn5ORgx44d6Nu3L2Qymbg9ISEBe/fuRVpaGr755psGxVxaWorS0lLxc37+kyEppVJZrWirTWW7hranP7g4WeP6bw9RpqzA/Yf5cLCrv4eV+dYt5lu3mG/dYr51qznz3dBzNqqweu211zBw4EB8++23OH36NDZt2oTFixdDIpHA19cXQUFB6NatG4KCgvCnP/1Jo8DrkpWVBRcXF7VtpqamcHR0RFZWVq3H7dmzBxMmTICTkxNMTU1haWmJ/fv3w9fXV63dm2++iY0bN6K4uBh9+vRBXFycuO/hw4eYPn06/vnPf8LW1vbpS9QqJiYG0dHR1bYfOXKk0cOo8fHxjWpPQEnxI/H7/f8+DFdn8wYfy3zrFvOtW8y3bjHfutUc+S4uLm5Qu0avvB4YGIjAwEB8+eWXSEpKgpWVFX788UekpaUhLS0N//73v/H++++joKDhc1qWLFmClStX1tkmPT29saGKli9fjtzcXBw9ehTOzs44cOAAIiIikJiYiICAALHd4sWLERkZiZs3byI6OhpTp05FXFwcJBIJoqKi8Oc//xnPPfdco669dOlSLFiwQPycn58PDw8PDBs2rMEFmlKpRHx8PIYOHarWg0b1yylNwcVfkgAAvn6BeK6Xbz1HMN+6xnzrFvOtW8y3bjVnvitHnOqj8SttKp8EBIDevXuLw4MAGj2XZeHChZg+fXqdbXx8fODq6ors7Gy17eXl5cjJyYGrq2uNx2VmZmLjxo24fPkyunTpAgAICgpCYmIiNm3ahNjYWLGts7MznJ2d0bFjR/j7+8PDwwNnz55FSEgIEhIScPDgQaxevVq8R5VKBVNTU2zZsgUzZ86s8fpyuRxyubzadplM1ugfuibHtHbubRzE7x8+Km5U/phv3WK+dYv51i3mW7eaI98NPZ/GhVVdJBJJo9orFAooFIp624WEhCA3NxepqakIDg4G8GTek0qlUivsqqrsupNK1efpm5iYQKVS1Xqtyn2V86OSkpJQUVEh7v/3v/+NlStX4syZM3jmmWfqjZ30Q/21NlxygYiImleTCqtjx47h2LFjyM7OrlakfPHFF00KrCb+/v4YMWIEoqKiEBsbC6VSiTlz5mDixIlwd3cH8OQ1OqGhodi+fTt69eoFPz8/+Pr6Yvbs2Vi9ejWcnJxw4MABxMfHi3OokpOTce7cOfTv3x8ODg7IzMzE8uXL0b59e4SEhIjXruqHH36AVCpF165dtX6fpD1tFHytDRER6Y7GL2GOjo7GsGHDcOzYMTx48ACPHj1S+2ouO3bsgJ+fH0JDQxEeHo7+/ftjy5Yt4n6lUomMjAyxp0omk+HQoUNQKBQYNWoUAgMDsX37dmzbtk1cxNTS0hLffPMNQkND0alTJ0RGRiIwMBAnT56scRiPjIfC0RqVHahcy4qIiJqbxj1WsbGx+PLLLzFlyhRtxlMvR0fHOhcD9fLyqjbHq0OHDnW+tzAgIAAJCQmNimP69On1zgsj/TM1NYGzgzXu5xSyx4qIiJqdxj1WZWVl6Nu3rzZjIWoWlcOBObnFKC0r13M0RETUkmlcWP3lL3+ps+eIyFBUncB+/yGHA4mIqPloPBRYUlKCLVu24OjRowgMDKz2GOLatWubHByRNrRxrjqBvQBt3RzqaE1ERKQ5jQurH3/8Ed26dQMAXL58WW1fY5dbIGpOXHKBiIh0RePC6vjx49qMg6jZVF1yIZtDgURE1Iw0nmNFZCzUhwLZY0VERM2nUT1WCxYswHvvvQcrKyu199/VhHOsyFCoDwWyx4qIiJpPowqrCxcuQKlUit/XhnOsyJDYWJvDwlyGxyVK9lgREVGzalRhVXVeFedYkbGQSCRo42yDG7/n4N6DfAiCwOKfiIiaRZPeFVhSUoIff/yx2rsCJRIJRo0a1eTgiLTFxdkWN37PQUlpOfILS2BnY6HvkIiIqAXSuLA6fPgwpkyZgocPH1bbJ5FIUFFR0aTAiLRJbQL7/XwWVkRE1Cw0firwtddeQ0REBO7evQuVSqX2xaKKDE0bRZUJ7HwZMxERNRONC6t79+5hwYIFaNOmjTbjIWoWXHKBiIh0QeOhwPHjx+PEiRNo3769NuMhahZVl1xIvnAdPu2cEeTfFiYm6v9tUVGhQtqV35F+vQDuV35HjwDPGttcTP8dDx8VwcnBqtbzaKONrq+nj5h0lW9DzKUh5puImkbjwmrjxo146aWXkJiYiICAgGrvCnz99debHByRttz4/Y+5gEnnryPp/HUonKwxb+YQDOzTEQBw8uwv+OiLBNx/WAgAiEvcV28bAM3WRtfX03dMzZlvQ8ylvuOuKd9E1HQSQRAETQ78/PPP8corr8Dc3BxOTk5qj69LJBL8+uuvWguyJcnPz4ednR3y8vJga2tb/wEAlEolDh06hPDw8GoFLNXv5Nlf8LcPD9a6//3FLwCAQbUZ2KejwcVtiDExbu1ej7SP/37rVnPmu6F/vzUurFxdXfH6669jyZIlkErZldxQLKx0q6JChfF/3aL2X/JPs7Mxh0QiQW7+Y4NoY29rgRWvh+Pd9YcYE+PWyfVcnGywd3MUhwWbAf/91i1DKKw0HgosKyvDhAkTWFSRQbuY/nudRRUA5BWU1HseXbbJzX+MBX/fx5i00IZxN6xN9sMCXEz/HT26tqu3LRHVTeOqaNq0adi9e7c2YyHSuoePivQdApFR4P9XiLRD4x6riooKrFq1Ct999x0CAwOrdbnxJcxkCJwcrPQdgkaCA9oh9dItfYehxhBjagjG3TDG+v8VIkOjcY/VpUuX0L17d0ilUly+fBkXLlwQv9LS0rQYIpHmgvzbQuFkXWcbhaO1QbVxcbLBh38bx5gYt06vF+Tfts42RNQwGhdWx48fr/UrISFBmzESaczERIp5M4fU2WZe5BCDajN35mCYyUwZE+PW6fU4cZ1IOzR+KpA0w6cC9aOmdX5cnGwwd+bgOtcC0mcbxsS4tX29dZ8dw4Mqc6lquh5pF//91i1DeCqQhZWOsbDSn4auTH3+0k0cO3EaoYP6ceV1HcSkq3wbYi51HXd5eQWGTPoIKpUA9za2+NeGv7Cnqpnx32/dMoTCSuPJ60TGxsREWu/j5CYmUnTr0hZ3btqgW5ea/8g19DzaaKPr6+kjJl3lW9txG2O+TU1N4GhvhQc5hSgpLWdRRdQM+P8qIqJWxMHOEsCTtbJUKg5YEGkbCysiolbE0c4CAKBSCcgrqH01diLSDAsrIqJWpLLHCgAe5RXrMRKilomFFRFRK8LCiqh5sbAiImpFqhZWObl8jQ2RtrGwIiJqRdhjRdS8WFgREbUi7LEial4srIiIWhG1woo9VkRax8KKiKgVURsKZI8VkdaxsCIiakVsbcwhkTz5nj1WRNpndIVVTk4OJk+eDFtbW9jb2yMyMhKFhYV1HpOVlYUpU6bA1dUVVlZW6NGjB/bt26fW5oUXXkC7du1gbm4ONzc3TJkyBXfu3FFrIwgCVq9ejY4dO0Iul+OZZ57B+++/r/V7JCJqLiZSKSzkJgCAR7ksrIi0zegKq8mTJ+PKlSuIj49HXFwcTp06hVmzZtV5zNSpU5GRkYGDBw/i0qVLGDduHCIiInDhwgWxzeDBg7Fnzx5kZGRg3759yMzMxPjx49XOM3fuXHz22WdYvXo1fv75Zxw8eBC9evVqlvskImouVhb/K6zyiiEIfK0NkTYZ1UuY09PTcfjwYZw7dw49e/YEAGzYsAHh4eFYvXo13N3dazzuzJkz2Lx5s1gELVu2DOvWrUNqaiq6d+8OAJg/f77Y3tPTE0uWLMGYMWOgVCohk8mQnp6OzZs34/Lly+jUqRMAwNvbuzlvl4ioWViamwIog7K8AgVFpbC1Ntd3SEQthlEVVklJSbC3txeLKgAICwuDVCpFcnIyxo4dW+Nxffv2xe7duzFy5EjY29tjz549KCkpwaBBg2psn5OTgx07dqBv376QyWQAgG+//RY+Pj6Ii4vDiBEjIAgCwsLCsGrVKjg6OtYac2lpKUpLS8XP+fn5AAClUgmlUtmg+65s19D21DTMt24x37qlVCrFHisAuP8gTxwaJO3j77duNWe+G3pOoyqssrKy4OLiorbN1NQUjo6OyMrKqvW4PXv2YMKECXBycoKpqSksLS2xf/9++Pr6qrV78803sXHjRhQXF6NPnz6Ii4sT9/3666+4efMm9u7di+3bt6OiogLz58/H+PHjkZCQUOu1Y2JiEB0dXW37kSNHYGlpWcMRtYuPj29Ue2oa5lu3mG/dsTT/o5D675Hj8GhjocdoWgf+futWc+S7uLhhcxINorBasmQJVq5cWWeb9PR0jc+/fPly5Obm4ujRo3B2dsaBAwcQERGBxMREBAQEiO0WL16MyMhI3Lx5E9HR0Zg6dSri4uIgkUigUqlQWlqK7du3o2PHjgCAzz//HMHBwcjIyBCHB5+2dOlSLFiwQPycn58PDw8PDBs2DLa2tg2KX6lUIj4+HkOHDhV70Kj5MN+6xXzrllKpRMrlPeLnTv6BGNSngx4jatn4+61bzZnvyhGn+hhEYbVw4UJMnz69zjY+Pj5wdXVFdna22vby8nLk5OTA1dW1xuMyMzOxceNGXL58GV26dAEABAUFITExEZs2bUJsbKzY1tnZGc7OzujYsSP8/f3h4eGBs2fPIiQkBG5ubjA1NRWLKgDw9/cHANy6davWwkoul0Mul1fbLpPJGv1D1+QY0hzzrVvMt+5YVhkKzC8oYd51gL/futUc+W7o+QyisFIoFFAoFPW2CwkJQW5uLlJTUxEcHAwASEhIgEqlQu/evWs8prLrTipVfwDSxMQEKpWq1mtV7qucH9WvXz+Ul5cjMzMT7du3BwD88ssvAJ5MdiciMhZWVYYCuZYVkXYZ1XIL/v7+GDFiBKKiopCSkoLTp09jzpw5mDhxovhE4O3bt+Hn54eUlBQAgJ+fH3x9fTF79mykpKQgMzMTa9asQXx8PMaMGQMASE5OxsaNG5GWloabN28iISEBkyZNQvv27RESEgLgyST5Hj16YObMmbhw4QJSU1Mxe/ZsDB06VK0Xi4jI0Fla/PHf1Dlcy4pIq4yqsAKAHTt2wM/PD6GhoQgPD0f//v2xZcsWcb9SqURGRobYUyWTyXDo0CEoFAqMGjUKgYGB2L59O7Zt24bw8HAAgKWlJb755huEhoaiU6dOiIyMRGBgIE6ePCkO40mlUnz77bdwdnbGc889h5EjR8Lf3x+7du3SfRKIiJqgao/Vozy+1oZImwxiKLAxHB0dsXPnzlr3e3l5VVvwrkOHDtVWWq8qICCgzif7Krm7u9d5HiIiY2BRdSiQPVZEWmV0PVZERNQ0JlIJbG2eLArKHisi7WJhRUTUCjnYPVlHLyeXr7Uh0iYWVkRErZDj/wqr0rJyPC7hquBE2sLCioioFarssQKAnFwOBxJpCwsrIqJWSK2w4lpWRFrDwoqIqBWqWlg9Yo8VkdawsCIiaoXUCiv2WBFpDQsrIqJWiEOBRM2DhRURUSvkyMnrRM2ChRURUSukPseKPVZE2sLCioioFbK3sxC/51AgkfawsCIiaoXMZKawtnzyknk+FUikPSysiIhaKQf7/73Whj1WRFrDwoqIqJVytLMCABQ/LkNpKV9rQ6QNLKyIiFqpyh4rgL1WRNrCwoqIqJVSX3KBhRWRNrCwIiJqpRztrcTvH+VxAjuRNrCwIiJqpRzYY0WkdSysiIhaqao9VjnssSLSChZWREStVNXJ67mcvE6kFSysiIhaKU5eJ9I+FlZERK0UhwKJtI+FFRFRK2Uul8HCXAaAL2Im0hYWVkRErVhlrxUXCCXSDhZWREStWOWSCwWFJVAqK/QcDZHxY2FFRNSKVV3L6lE+e62ImoqFFRFRK6Y2gT2XE9iJmoqFFRFRK1Z1yQVOYCdqOhZWREStWNVFQrnkAlHTsbAiImrFHO2qDgWyx4qoqVhYERG1YlV7rB5xyQWiJmNhRUTUilXtsWJhRdR0LKyIiFoxx6pzrPhUIFGTsbAiImrFLC3MYGZmCoA9VkTawMKKiKgVk0gk4pIL7LEiajqjK6xycnIwefJk2Nrawt7eHpGRkSgsLKzzmKysLEyZMgWurq6wsrJCjx49sG/fPrU2L7zwAtq1awdzc3O4ublhypQpuHPnjlqb7777Dn369IGNjQ0UCgVefPFF3LhxQ9u3SESkU5UT2PMKHqO8QqXnaIiMm9EVVpMnT8aVK1cQHx+PuLg4nDp1CrNmzarzmKlTpyIjIwMHDx7EpUuXMG7cOERERODChQtim8GDB2PPnj3IyMjAvn37kJmZifHjx4v7r1+/jtGjR2PIkCFIS0vDd999hwcPHmDcuHHNdq9ERLpQOYFdEIC8/Md6jobIuJnqO4DGSE9Px+HDh3Hu3Dn07NkTALBhwwaEh4dj9erVcHd3r/G4M2fOYPPmzejVqxcAYNmyZVi3bh1SU1PRvXt3AMD8+fPF9p6enliyZAnGjBkDpVIJmUyG1NRUVFRU4O9//zuk0if16KJFizB69GixDRGRMar6vsCcvCI4OVjV0ZqI6mJUhVVSUhLs7e3FogoAwsLCIJVKkZycjLFjx9Z4XN++fbF7926MHDkS9vb22LNnD0pKSjBo0KAa2+fk5GDHjh3o27evWDAFBwdDKpVi69atmD59OgoLC/HVV18hLCyszqKqtLQUpaWl4uf8/HwAgFKphFKpbNB9V7ZraHtqGuZbt5hv3aop33Y25uL39x/kw+sZB53H1VLx91u3mjPfDT2nURVWWVlZcHFxUdtmamoKR0dHZGVl1Xrcnj17MGHCBDg5OcHU1BSWlpbYv38/fH191dq9+eab2LhxI4qLi9GnTx/ExcWJ+7y9vXHkyBFERERg9uzZqKioQEhICA4dOlRnzDExMYiOjq62/ciRI7C0tKzhiNrFx8c3qj01DfOtW8y3blXN993bueL3J04l4f7tK3qIqGXj77duNUe+i4sb9tSsQRRWS5YswcqVK+tsk56ervH5ly9fjtzcXBw9ehTOzs44cOAAIiIikJiYiICAALHd4sWLERkZiZs3byI6OhpTp05FXFwcJBIJsrKyEBUVhWnTpmHSpEkoKCjAihUrMH78eMTHx0MikdR47aVLl2LBggXi5/z8fHh4eGDYsGGwtbVtUPxKpRLx8fEYOnQohxx1gPnWLeZbt2rKt7n9L0g4918AQDuvDggPD9ZniC0Kf791qznzXTniVB+DKKwWLlyI6dOn19nGx8cHrq6uyM7OVtteXl6OnJwcuLq61nhcZmYmNm7ciMuXL6NLly4AgKCgICQmJmLTpk2IjY0V2zo7O8PZ2RkdO3aEv78/PDw8cPbsWYSEhGDTpk2ws7PDqlWrxPb//Oc/4eHhgeTkZPTp06fG68vlcsjl8mrbZTJZo3/omhxDmmO+dYv51q2q+VY42Yjb8wpK+HNoBvz91q3myHdDz2cQhZVCoYBCoai3XUhICHJzc5Gamorg4Cf/RZWQkACVSoXevXvXeExl113lhPNKJiYmUKlqf6y4cl/l/Kji4uIaz1G1LRGRMXK0r/IiZi4SStQkRrXcgr+/P0aMGIGoqCikpKTg9OnTmDNnDiZOnCg+EXj79m34+fkhJSUFAODn5wdfX1/Mnj0bKSkpyMzMxJo1axAfH48xY8YAAJKTk7Fx40akpaXh5s2bSEhIwKRJk9C+fXuEhIQAAEaOHIlz587h3XffxdWrV3H+/HnMmDEDnp6e4pOFRETGyLHKU4GPcllYETWFURVWALBjxw74+fkhNDQU4eHh6N+/P7Zs2SLuVyqVyMjIEHuqZDIZDh06BIVCgVGjRiEwMBDbt2/Htm3bEB4eDgCwtLTEN998g9DQUHTq1AmRkZEIDAzEyZMnxWG8IUOGYOfOnThw4AC6d++OESNGQC6X4/Dhw7CwsNB9IoiItMTG2hympk/+HDzKZ2FF1BQGMRTYGI6Ojti5c2et+728vCAIgtq2Dh06VFtpvaqAgAAkJCTUe+2JEydi4sSJDQ+WiMgISCQSONha4n5OIV9rQ9RERtdjRURE2ufwv3lWuXnFUKmEeloTUW1YWBERkTjPqkIlIL+Qr7Uh0hQLKyIigqN9ldfacAI7kcZYWBEREeyrPhnIJReINMbCioiI4GhXZS0rTmAn0hgLKyIiUhsKZI8VkeZYWBERERzYY0WkFSysiIhIffI6e6yINMbCioiI1IcC2WNFpDEWVkREBFtrC0ilEgDssSJqChZWREQEExMp7G2fvPeUL2Im0hwLKyIiAvDHBPZHecXV3rlKRA3DwoqIiAD8Mc9KWV6BwuJSPUdDZJxYWBEREQD1RUI5HEikGRZWREQEAHBQe18gnwwk0gQLKyIiAgA42nEtK6KmYmFFREQAAAc7rmVF1FQsrIiICADgYF/ltTbssSLSCAsrIiIC8NRQICevE2mEhRUREQEAHKv0WD3K41AgkSZYWBEREQCIK68D7LEi0hQLKyIiAgCYmprAzuZ/r7VhjxWRRlhYERGRqPLJwJxcvtaGSBMsrIiISFT5WpvSsnI8LlHqORoi42Oq7wCIiMhw2Nv+8WTg9+euIbSfH0xM1P8bvKJChYvpv+PhoyI4OVghyL9ttTYNbWdobbR9vbQrvyP9egHcr/yOHgGeRhN3S823LrCwIiIiAMDJs78g6fyv4ud3Pz6Ezf88hXkzh2Bgn45im4++SMD9h4ViO4WTtVqbhrYztDbNeb24xH1GGXdLyreuSAQOoutUfn4+7OzskJeXB1tb2wYdo1QqcejQIYSHh0MmkzVzhMR86xbzrVu15fvk2V/wtw8P1nrc+4tfAIB62wzs01Fr59JlG8bdsuPWRnHV0L/fLKx0jIWV4WO+dYv51q2a8l1RocL4v25R6xF4mqWFGSQSoKi4rNY2VpZyTHqhJ/518Fyd7RpyLl22YdwtO24XJxvs3RzV5GHBhv795lAgEVErdzH99zqLKgAoflz7H65KRcWl+GzX6XrbNeRcumzDuFt23NkPC3Ax/Xf06Nqu3rbawKcCiYhauYePuGYVtWy6/B1nYUVE1Mo5OVjV36iBwgd31dq5dIlx65au49bm73h9WFgREbVyQf5toXCyrrONwtG63jYuTjZYNDtMK+fSZRvG3bLjdnGyQZB/2zrbaBMLKyKiVs7ERIp5M4fU2WZe5JB628ydORhmMlOtnEuXbRh3y4577szBOl3PioUVERFhYJ+OeH/xC9X+69/FyUZ8XL0hbbR5Ll22YdwtO25d4nILOsblFgwf861bzLdu1ZdvQ11R21hXAj9/6SaOnTiN0EH9uPK6AeS7KRr891swMg8fPhT+/Oc/CzY2NoKdnZ0wc+ZMoaCgoM5j7t69K7z88stCmzZtBEtLS6F79+7C119/XWPbkpISISgoSAAgXLhwQW3fxYsXhf79+wtyuVxo27atsHLlykbHn5eXJwAQ8vLyGnxMWVmZcODAAaGsrKzR16PGY751i/nWLeZbt5hv3WrOfDf077fRDQVOnjwZV65cQXx8POLi4nDq1CnMmjWrzmOmTp2KjIwMHDx4EJcuXcK4ceMQERGBCxcuVGv7xhtvwN3dvdr2/Px8DBs2DJ6enkhNTcWHH36Id955B1u2bNHavREREZFxM6rCKj09HYcPH8Znn32G3r17o3///tiwYQN27dqFO3fu1HrcmTNn8Nprr6FXr17w8fHBsmXLYG9vj9TUVLV2//3vf3HkyBGsXr262jl27NiBsrIyfPHFF+jSpQsmTpyI119/HWvXrtX6fRIREZFxMqrCKikpCfb29ujZs6e4LSwsDFKpFMnJybUe17dvX+zevRs5OTlQqVTYtWsXSkpKMGjQILHNvXv3EBUVha+++gqWlpbVzpGUlITnnnsOZmZm4rbhw4cjIyMDjx490s4NEhERkVEzqlfaZGVlwcXFRW2bqakpHB0dkZWVVetxe/bswYQJE+Dk5ARTU1NYWlpi//798PX1BQAIgoDp06fjlVdeQc+ePXHjxo0ar+3t7a22rU2bNuI+BweHGq9dWlqK0tJS8XN+fj6AJxNIlUpl/Tf9v7ZV/5eaF/OtW8y3bjHfusV861Zz5ruh5zSIwmrJkiVYuXJlnW3S09M1Pv/y5cuRm5uLo0ePwtnZGQcOHEBERAQSExMREBCADRs2oKCgAEuXLtX4GrWJiYlBdHR0te1HjhypsWesLvHx8doKixqA+dYt5lu3mG/dYr51qznyXVxc3KB2BrHcwv379/Hw4cM62/j4+OCf//wnFi5cqDb0Vl5eDnNzc+zduxdjx46tdlxmZiZ8fX1x+fJldOnSRdweFhYGX19fxMbGYsyYMfj2228hkUjE/RUVFTAxMcHkyZOxbds2TJ06Ffn5+Thw4IDY5vjx4xgyZAhycnIa1WPl4eGBBw8eNGq5hfj4eAwdOpSPo+sA861bzLduMd+6xXzrVnPmOz8/H87OzvUut2AQPVYKhQIKhaLediEhIcjNzUVqaiqCg4MBAAkJCVCpVOjdu3eNx1RWmFKp+nQyExMTqFQqAMD69evx97//Xdx3584dDB8+HLt37xbPGxISgr/97W9QKpXiDys+Ph6dOnWqtagCALlcDrlcXm27TCZr9A9dk2NIc8y3bjHfusV86xbzrVvNke+Gns+oJq/7+/tjxIgRiIqKQkpKCk6fPo05c+Zg4sSJ4hIJt2/fhp+fH1JSUgAAfn5+8PX1xezZs5GSkoLMzEysWbMG8fHxGDNmDACgXbt26Nq1q/jVseOTVVrbt2+Ptm2fvF/oz3/+M8zMzBAZGYkrV65g9+7d+Pjjj7FgwQLdJ4KIiIgMklEVVsCTZQ/8/PwQGhqK8PBw9O/fX20tKaVSiYyMDLGnSiaT4dChQ1AoFBg1ahQCAwOxfft2bNu2DeHh4Q2+rp2dHY4cOYLr168jODgYCxcuxIoVK+pdQ4uIiIhaD4MYCmwMR0dH7Ny5s9b9Xl5eeHraWIcOHbBv374GX6OmcwBAYGAgEhMTGx5sDSrPW/l0YEMolUoUFxcjPz+fXck6wHzrFvOtW8y3bjHfutWc+a78u13f1HSjK6yMXUFBAQDAw8NDz5EQERFRYxUUFMDOzq7W/QbxVGBrolKpcOfOHdjY2Kg9hViXyicJf/vttwY/SUiaY751i/nWLeZbt5hv3WrOfAuCgIKCAri7u1d7IK4q9ljpmFQqFSfEN5atrS3/j6lDzLduMd+6xXzrFvOtW82V77p6qioZ3eR1IiIiIkPFwoqIiIhIS1hYGQG5XI633367xoVGSfuYb91ivnWL+dYt5lu3DCHfnLxOREREpCXssSIiIiLSEhZWRERERFrCwoqIiIhIS1hYEREREWkJCysDt2nTJnh5ecHc3By9e/dGSkqKvkNqMU6dOoVRo0bB3d0dEokEBw4cUNsvCAJWrFgBNzc3WFhYICwsDFevXtVPsEYuJiYGzz77LGxsbODi4oIxY8YgIyNDrU1JSQleffVVODk5wdraGi+++CLu3bunp4iN2+bNmxEYGCgukhgSEoL//ve/4n7munl98MEHkEgkmDdvnriNOdeed955BxKJRO3Lz89P3K/vXLOwMmC7d+/GggUL8Pbbb+P8+fMICgrC8OHDkZ2dre/QWoSioiIEBQVh06ZNNe5ftWoV1q9fj9jYWCQnJ8PKygrDhw9HSUmJjiM1fidPnsSrr76Ks2fPIj4+HkqlEsOGDUNRUZHYZv78+fj222+xd+9enDx5Enfu3MG4ceP0GLXxatu2LT744AOkpqbihx9+wJAhQzB69GhcuXIFAHPdnM6dO4dPPvkEgYGBatuZc+3q0qUL7t69K359//334j6951ogg9WrVy/h1VdfFT9XVFQI7u7uQkxMjB6japkACPv37xc/q1QqwdXVVfjwww/Fbbm5uYJcLhf+9a9/6SHCliU7O1sAIJw8eVIQhCe5lclkwt69e8U26enpAgAhKSlJX2G2KA4ODsJnn33GXDejgoICoUOHDkJ8fLwwcOBAYe7cuYIg8Pdb295++20hKCioxn2GkGv2WBmosrIypKamIiwsTNwmlUoRFhaGpKQkPUbWOly/fh1ZWVlq+bezs0Pv3r2Zfy3Iy8sDADg6OgIAUlNToVQq1fLt5+eHdu3aMd9NVFFRgV27dqGoqAghISHMdTN69dVXMXLkSLXcAvz9bg5Xr16Fu7s7fHx8MHnyZNy6dQuAYeSaL2E2UA8ePEBFRQXatGmjtr1Nmzb4+eef9RRV65GVlQUANea/ch9pRqVSYd68eejXrx+6du0K4Em+zczMYG9vr9aW+dbcpUuXEBISgpKSElhbW2P//v3o3Lkz0tLSmOtmsGvXLpw/fx7nzp2rto+/39rVu3dvfPnll+jUqRPu3r2L6OhoDBgwAJcvXzaIXLOwIiKdevXVV3H58mW1ORGkfZ06dUJaWhry8vLw9ddfY9q0aTh58qS+w2qRfvvtN8ydOxfx8fEwNzfXdzgt3p/+9Cfx+8DAQPTu3Ruenp7Ys2cPLCws9BjZExwKNFDOzs4wMTGp9iTDvXv34OrqqqeoWo/KHDP/2jVnzhzExcXh+PHjaNu2rbjd1dUVZWVlyM3NVWvPfGvOzMwMvr6+CA4ORkxMDIKCgvDxxx8z180gNTUV2dnZ6NGjB0xNTWFqaoqTJ09i/fr1MDU1RZs2bZjzZmRvb4+OHTvi2rVrBvH7zcLKQJmZmSE4OBjHjh0Tt6lUKhw7dgwhISF6jKx18Pb2hqurq1r+8/PzkZyczPxrQBAEzJkzB/v370dCQgK8vb3V9gcHB0Mmk6nlOyMjA7du3WK+tUSlUqG0tJS5bgahoaG4dOkS0tLSxK+ePXti8uTJ4vfMefMpLCxEZmYm3NzcDOP3WydT5Ekju3btEuRyufDll18KP/30kzBr1izB3t5eyMrK0ndoLUJBQYFw4cIF4cKFCwIAYe3atcKFCxeEmzdvCoIgCB988IFgb28v/Pvf/xZ+/PFHYfTo0YK3t7fw+PFjPUdufP76178KdnZ2wokTJ4S7d++KX8XFxWKbV155RWjXrp2QkJAg/PDDD0JISIgQEhKix6iN15IlS4STJ08K169fF3788UdhyZIlgkQiEY4cOSIIAnOtC1WfChQE5lybFi5cKJw4cUK4fv26cPr0aSEsLExwdnYWsrOzBUHQf65ZWBm4DRs2CO3atRPMzMyEXr16CWfPntV3SC3G8ePHBQDVvqZNmyYIwpMlF5YvXy60adNGkMvlQmhoqJCRkaHfoI1UTXkGIGzdulVs8/jxY+H//u//BAcHB8HS0lIYO3ascPfuXf0FbcRmzpwpeHp6CmZmZoJCoRBCQ0PFokoQmGtdeLqwYs61Z8KECYKbm5tgZmYmPPPMM8KECROEa9euifv1nWuJIAiCbvrGiIiIiFo2zrEiIiIi0hIWVkRERERawsKKiIiISEtYWBERERFpCQsrIiIiIi1hYUVERESkJSysiIiIiLSEhRURERGRlrCwIqIWbdCgQZg3b56+wxAJgoBZs2bB0dEREokEaWlpzXKdqvdtaDkgaslYWBFRs5o+fTokEgk++OADte0HDhyARCLRU1T6c/jwYXz55ZeIi4vD3bt30bVrV32HRERaxMKKiJqdubk5Vq5ciUePHuk7FK0pKyvT6LjMzEy4ubmhb9++cHV1hampqZYjIyJ9YmFFRM0uLCwMrq6uiImJqbWNl5cXPvroI7Vt3bp1wzvvvCN+HjRoEF577TXMmzcPDg4OaNOmDT799FMUFRVhxowZsLGxga+vL/773/+qnae8vBxz5syBnZ0dnJ2dsXz5clR9TapKpUJMTAy8vb1hYWGBoKAgfP3112rnGDRoEObMmYN58+bB2dkZw4cPr/E+SktL8frrr8PFxQXm5ubo378/zp07B+BJ791rr72GW7duQSKRwMvLq8ZzqFQqrFq1Cr6+vpDL5WjXrh3ef/99cf/hw4fRv39/2Nvbw8nJCc8//zwyMzNrze3Tvv76awQEBMDCwgJOTk4ICwtDUVFRre0zMzMhkUgQFxeH0NBQWFpaolOnTkhOTm7wNYlaCxZWRNTsTExM8I9//AMbNmzA77//3qRzbdu2Dc7OzkhJScFrr72Gv/71r3jppZfQt29fnD9/HsOGDcOUKVNQXFysdoypqSlSUlLw8ccfY+3atfjss8/E/TExMdi+fTtiY2Nx5coVzJ8/Hy+//DJOnjxZ7dpmZmY4ffo0YmNja4zvjTfewL59+7Bt2zacP38evr6+GD58OHJycvDxxx/j3XffRdu2bXH37l2x4Hra0qVL8cEHH2D58uX46aefsHPnTrRp00bcX1RUhAULFuCHH37AsWPHIJVKMXbsWKhUqnrzd/fuXUyaNAkzZ85Eeno6Tpw4gXHjxqkVmk+7ePEiJBIJ1q5di+XLl+PixYto164dlixZUu/1iFodgYioGU2bNk0YPXq0IAiC0KdPH2HmzJmCIAjC/v37har/BHl6egrr1q1TOzYoKEh4++23xc8DBw4U+vfvL34uLy8XrKyshClTpojb7t69KwAQkpKSxGP8/f0FlUoltnnzzTcFf39/QRAEoaSkRLC0tBTOnDmjdu3IyEhh0qRJatfu3r17nfdaWFgoyGQyYceOHeK2srIywd3dXVi1apUgCIKwbt06wdPTs9Zz5OfnC3K5XPj000/rvFZV9+/fFwAIly5dUot37ty51b5PTU0VAAg3btxo8PlXrFghODg4CNnZ2eK29evXC126dGnwOYhaC/ZYEZHOrFy5Etu2bUN6errG5wgMDBS/NzExgZOTEwICAsRtlT072dnZ4rY+ffqoTZQPCQnB1atXUVFRgWvXrqG4uBhDhw6FtbW1+LV9+/Zqw2vBwcF1xpaZmQmlUol+/fqJ22QyGXr16tXge05PT0dpaSlCQ0NrbXP16lVMmjQJPj4+sLW1FYcUb926Ve/5g4KCEBoaioCAALz00kv49NNP6537dvHiRYwePRoKhULcdv36dfj6+jbonohaExZWRKQzzz33HIYPH46lS5dW2yeVSqsNRymVymrtZDKZ2meJRKK2rbKAasiwGAAUFhYCAP7zn/8gLS1N/Prpp5+qzbOysrJq0DmbwsLCot42o0aNQk5ODj799FMkJyeLc50aMqHexMQE8fHx+O9//4vOnTtjw4YN6NSpE65fv17rMRcvXkRISIjatrS0NHTr1q3e6xG1NiysiEinPvjgA3z77bdISkpS265QKHD37l3xc35+fp1/7Bvj6UnWZ8+eRYcOHWBiYoLOnTtDLpfj1q1b8PX1Vfvy8PBo1HXat28vzsGqpFQqce7cOXTu3LlB5+jQoQMsLCxw7NixGvc/fPgQGRkZWLZsGUJDQ+Hv79/opy0lEgn69euH6OhoXLhwAWZmZti/f3+NbfPy8nDjxg10795dbTsLK6Ka8TlfItKpgIAATJ48GevXr1fbPmTIEHz55ZcYNWoU7O3tsWLFCpiYmGjlmrdu3cKCBQswe/ZsnD9/Hhs2bMCaNWsAADY2Nli0aBHmz58PlUqF/v37Iy8vD6dPn4atrS2mTZvW4OtYWVnhr3/9KxYvXgxHR0e0a9cOq1atQnFxMSIjIxt0DnNzc7z55pt44403YGZmhn79+uH+/fu4cuUKIiMj4eDgACcnJ2zZsgVubm64detWoyaRJycn49ixYxg2bBhcXFyQnJyM+/fvw9/fv8b2P/74I0xNTdWGW2/evIlHjx6xsCKqAQsrItK5d999F7t371bbtnTpUly/fh3PP/887Ozs8N5772mtx2rq1Kl4/PgxevXqBRMTE8ydOxezZs0S97/33ntQKBSIiYnBr7/+Cnt7e/To0QNvvfVWo6/1wQcfQKVSYcqUKSgoKEDPnj3x3XffwcHBocHnWL58OUxNTbFixQrcuXMHbm5ueOWVVwA8GTLdtWsXXn/9dXTt2hWdOnXC+vXrMWjQoAad29bWFqdOncJHH32E/Px8eHp6Ys2aNfjTn/5UY/uLFy+iU6dOMDc3F7dduHAB9vb2tS4XQdSaSYSnJzUQERERkUY4x4qIiIhIS1hYEREREWkJCysiIiIiLWFhRURERKQlLKyIiIiItISFFREREZGWsLAiIiIi0hIWVkRERERawsKKiIiISEtYWBERERFpCQsrIiIiIi1hYUVERESkJf8fu6vPbRyvzB8AAAAASUVORK5CYII="},"metadata":{}}]},{"cell_type":"code","source":"model_xgb = XGBClassifier(\n    n_estimators=otimos.x[0],\n    learning_rate=otimos.x[1],\n    max_depth=otimos.x[2],\n    min_child_weight=otimos.x[3],\n    subsample=otimos.x[4],\n    colsample_bytree=otimos.x[5],\n    gamma=otimos.x[6],\n    random_state=0,\n    use_label_encoder=False,\n    eval_metric='logloss'\n)\n\nscore = cross_val_score(model_xgb, X_train_sc, y_train, cv = 10)\n\nnp.mean(score)","metadata":{"execution":{"iopub.status.busy":"2024-09-09T18:43:34.444376Z","iopub.execute_input":"2024-09-09T18:43:34.445588Z","iopub.status.idle":"2024-09-09T18:43:37.091859Z","shell.execute_reply.started":"2024-09-09T18:43:34.445522Z","shell.execute_reply":"2024-09-09T18:43:37.090929Z"},"trusted":true},"execution_count":50,"outputs":[{"execution_count":50,"output_type":"execute_result","data":{"text/plain":"0.8395380774032459"},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Ensanble model (Voting)","metadata":{}},{"cell_type":"code","source":"from sklearn.ensemble import VotingClassifier\n\n# Configurando o ensemble VotingClassifier\nmodel_voting = VotingClassifier(\n    estimators=[\n#         ('LR', model_lr), \n#         ('NB', model_nb), \n#         ('KNN', model_knn), \n        ('SVC', model_svc), \n        ('RF', model_rf),\n        ('XGB', model_xgb)\n    ],\n    voting='soft'  # Use 'soft' para ponderação de probabilidades\n)\n\n# Treinando o ensemble VotingClassifier\nmodel_voting.fit(X_train_sc, y_train)\n\n# Avaliação do ensemble com validação cruzada\nscore = cross_val_score(model_voting, X_train_sc, y_train, cv=10, n_jobs=-1)  # Aqui n_jobs está correto\nprint(f\"Acurácia do Ensemble Voting: {np.mean(score)}\")\n","metadata":{"execution":{"iopub.status.busy":"2024-09-09T18:42:30.42404Z","iopub.execute_input":"2024-09-09T18:42:30.424608Z","iopub.status.idle":"2024-09-09T18:42:54.51923Z","shell.execute_reply.started":"2024-09-09T18:42:30.424546Z","shell.execute_reply":"2024-09-09T18:42:54.517872Z"},"trusted":true},"execution_count":45,"outputs":[{"name":"stdout","text":"Acurácia do Ensemble Voting: 0.8384019975031212\n","output_type":"stream"}]},{"cell_type":"markdown","source":"## Modelo Final","metadata":{}},{"cell_type":"code","source":"model_voting.fit(X_train_sc, y_train)\n\ny_pred = model_voting.predict(X_train_sc)\n\nconfusion_matrix(y_train, y_pred)","metadata":{"execution":{"iopub.status.busy":"2024-09-09T18:42:54.52268Z","iopub.execute_input":"2024-09-09T18:42:54.523251Z","iopub.status.idle":"2024-09-09T18:43:00.130272Z","shell.execute_reply.started":"2024-09-09T18:42:54.523192Z","shell.execute_reply":"2024-09-09T18:43:00.128912Z"},"trusted":true},"execution_count":46,"outputs":[{"execution_count":46,"output_type":"execute_result","data":{"text/plain":"array([[515,  34],\n       [ 95, 247]])"},"metadata":{}}]},{"cell_type":"code","source":"score = model_voting.score(X_train_sc, y_train)\nscore","metadata":{"execution":{"iopub.status.busy":"2024-09-09T18:43:00.131922Z","iopub.execute_input":"2024-09-09T18:43:00.132411Z","iopub.status.idle":"2024-09-09T18:43:00.775274Z","shell.execute_reply.started":"2024-09-09T18:43:00.132355Z","shell.execute_reply":"2024-09-09T18:43:00.773986Z"},"trusted":true},"execution_count":47,"outputs":[{"execution_count":47,"output_type":"execute_result","data":{"text/plain":"0.8552188552188552"},"metadata":{}}]},{"cell_type":"markdown","source":"## Predição dos dados de teste","metadata":{"execution":{"iopub.status.busy":"2024-09-05T16:45:31.616942Z","iopub.execute_input":"2024-09-05T16:45:31.617365Z","iopub.status.idle":"2024-09-05T16:45:31.622452Z","shell.execute_reply.started":"2024-09-05T16:45:31.617311Z","shell.execute_reply":"2024-09-05T16:45:31.621105Z"}}},{"cell_type":"code","source":"y_pred_test = model_voting.predict(X_test_sc)\n\nsubmission = pd.DataFrame(test['PassengerId'])\n\nsubmission['Survived'] = y_pred_test\n\nsubmission.to_csv('submission.csv', index= False)","metadata":{"execution":{"iopub.status.busy":"2024-09-09T18:43:00.776853Z","iopub.execute_input":"2024-09-09T18:43:00.777621Z","iopub.status.idle":"2024-09-09T18:43:01.306131Z","shell.execute_reply.started":"2024-09-09T18:43:00.777571Z","shell.execute_reply":"2024-09-09T18:43:01.305134Z"},"trusted":true},"execution_count":48,"outputs":[]},{"cell_type":"code","source":"submission","metadata":{"execution":{"iopub.status.busy":"2024-09-09T18:43:01.307605Z","iopub.execute_input":"2024-09-09T18:43:01.30837Z","iopub.status.idle":"2024-09-09T18:43:01.320512Z","shell.execute_reply.started":"2024-09-09T18:43:01.308322Z","shell.execute_reply":"2024-09-09T18:43:01.319356Z"},"trusted":true},"execution_count":49,"outputs":[{"execution_count":49,"output_type":"execute_result","data":{"text/plain":"     PassengerId  Survived\n0            892         0\n1            893         0\n2            894         0\n3            895         0\n4            896         1\n..           ...       ...\n413         1305         0\n414         1306         1\n415         1307         0\n416         1308         0\n417         1309         0\n\n[418 rows x 2 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>PassengerId</th>\n      <th>Survived</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>892</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>893</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>894</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>895</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>896</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>413</th>\n      <td>1305</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>414</th>\n      <td>1306</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>415</th>\n      <td>1307</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>416</th>\n      <td>1308</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>417</th>\n      <td>1309</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>418 rows × 2 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}